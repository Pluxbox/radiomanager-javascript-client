/**
 * RadioManager
 * RadioManager
 *
 * OpenAPI spec version: 2.0
 * Contact: support@pluxbox.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'radiomanagermodels/Program', 'radiomanagermodels/ProgramFieldValues', 'radiomanagermodels/ProgramInputOnly'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Program'), require('./ProgramFieldValues'), require('./ProgramInputOnly'));
  } else {
    // Browser globals (root is window)
    if (!root.radiomanager) {
      root.radiomanager = {};
    }
    root.radiomanager.ProgramDataInput = factory(root.radiomanager.ApiClient, root.radiomanager.Program, root.radiomanager.ProgramFieldValues, root.radiomanager.ProgramInputOnly);
  }
}(this, function(ApiClient, Program, ProgramFieldValues, ProgramInputOnly) {
  'use strict';




  /**
   * The ProgramDataInput model module.
   * @module radiomanagermodels/ProgramDataInput
   * @version 2.0
   */

  /**
   * Constructs a new <code>ProgramDataInput</code>.
   * @alias module:radiomanagermodels/ProgramDataInput
   * @class
   * @implements module:radiomanagermodels/Program
   * @implements module:radiomanagermodels/ProgramInputOnly
   * @param modelTypeId {Number} 
   * @param title {String} 
   */
  var exports = function(modelTypeId, title) {
    var _this = this;

    Program.call(_this, modelTypeId, title);
    ProgramInputOnly.call(_this);
  };

  /**
   * Constructs a <code>ProgramDataInput</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:radiomanagermodels/ProgramDataInput} obj Optional instance to populate.
   * @return {module:radiomanagermodels/ProgramDataInput} The populated <code>ProgramDataInput</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      Program.constructFromObject(data, obj);
      ProgramInputOnly.constructFromObject(data, obj);
    }
    return obj;
  }


  // Implement Program interface:
  /**
   * @member {Number} model_type_id
   */
exports.prototype['model_type_id'] = undefined;

  /**
   * @member {module:radiomanagermodels/ProgramFieldValues} field_values
   */
exports.prototype['field_values'] = undefined;

  /**
   * @member {String} title
   */
exports.prototype['title'] = undefined;

  /**
   * @member {Boolean} disabled
   */
exports.prototype['disabled'] = undefined;

  /**
   * @member {Number} genre_id
   */
exports.prototype['genre_id'] = undefined;

  /**
   * @member {String} description
   */
exports.prototype['description'] = undefined;

  /**
   * @member {String} short_name
   */
exports.prototype['short_name'] = undefined;

  /**
   * @member {String} medium_name
   */
exports.prototype['medium_name'] = undefined;

  /**
   * @member {String} website
   */
exports.prototype['website'] = undefined;

  /**
   * @member {String} email
   */
exports.prototype['email'] = undefined;

  /**
   * @member {Boolean} recommended
   */
exports.prototype['recommended'] = undefined;

  /**
   * @member {String} language
   */
exports.prototype['language'] = undefined;

  /**
   * @member {Number} pty_code_id
   */
exports.prototype['pty_code_id'] = undefined;

  // Implement ProgramInputOnly interface:
  /**
   * @member {Array.<Number>} tags
   */
exports.prototype['tags'] = undefined;

  /**
   * @member {Array.<Number>} presenters
   */
exports.prototype['presenters'] = undefined;



  return exports;
}));


