/**
 * RadioManager
 * RadioManager
 *
 * OpenAPI spec version: 2.0
 * Contact: support@pluxbox.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'radiomanagermodels/ModelTypeOptions'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ModelTypeOptions'));
  } else {
    // Browser globals (root is window)
    if (!root.radiomanager) {
      root.radiomanager = {};
    }
    root.radiomanager.ModelType = factory(root.radiomanager.ApiClient, root.radiomanager.ModelTypeOptions);
  }
}(this, function(ApiClient, ModelTypeOptions) {
  'use strict';




  /**
   * The ModelType model module.
   * @module radiomanagermodels/ModelType
   * @version 2.0
   */

  /**
   * Constructs a new <code>ModelType</code>.
   * @alias module:radiomanagermodels/ModelType
   * @class
   * @param id {Number} 
   */
  var exports = function(id) {
    var _this = this;

    _this['id'] = id;







  };

  /**
   * Constructs a <code>ModelType</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:radiomanagermodels/ModelType} obj Optional instance to populate.
   * @return {module:radiomanagermodels/ModelType} The populated <code>ModelType</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('model')) {
        obj['model'] = ApiClient.convertToType(data['model'], 'String');
      }
      if (data.hasOwnProperty('created_at')) {
        obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
      }
      if (data.hasOwnProperty('updated_at')) {
        obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
      }
      if (data.hasOwnProperty('options')) {
        obj['options'] = ModelTypeOptions.constructFromObject(data['options']);
      }
      if (data.hasOwnProperty('order')) {
        obj['order'] = ApiClient.convertToType(data['order'], 'Number');
      }
      if (data.hasOwnProperty('deleted_at')) {
        obj['deleted_at'] = ApiClient.convertToType(data['deleted_at'], 'Date');
      }
    }
    return obj;
  }

  /**
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {module:radiomanagermodels/ModelType.ModelEnum} model
   */
  exports.prototype['model'] = undefined;
  /**
   * @member {Date} created_at
   */
  exports.prototype['created_at'] = undefined;
  /**
   * @member {Date} updated_at
   */
  exports.prototype['updated_at'] = undefined;
  /**
   * @member {module:radiomanagermodels/ModelTypeOptions} options
   */
  exports.prototype['options'] = undefined;
  /**
   * @member {Number} order
   */
  exports.prototype['order'] = undefined;
  /**
   * @member {Date} deleted_at
   */
  exports.prototype['deleted_at'] = undefined;


  /**
   * @return {Number}
   */
  exports.prototype.getId = function() {
    return this['id'];
  }

  /**
   * @param {Number} id
   */
  exports.prototype.setId = function(id) {
    this['id'] = id;
  }


  /**
   * @return {String}
   */
  exports.prototype.getName = function() {
    return this['name'];
  }

  /**
   * @param {String} name
   */
  exports.prototype.setName = function(name) {
    this['name'] = name;
  }


  /**
   * @return {module:radiomanagermodels/ModelType.ModelEnum}
   */
  exports.prototype.getModel = function() {
    return this['model'];
  }

  /**
   * @param {module:radiomanagermodels/ModelType.ModelEnum} model
   */
  exports.prototype.setModel = function(model) {
    this['model'] = model;
  }


  /**
   * @return {Date}
   */
  exports.prototype.getCreatedAt = function() {
    return this['created_at'];
  }

  /**
   * @param {Date} createdAt
   */
  exports.prototype.setCreatedAt = function(createdAt) {
    this['created_at'] = createdAt;
  }


  /**
   * @return {Date}
   */
  exports.prototype.getUpdatedAt = function() {
    return this['updated_at'];
  }

  /**
   * @param {Date} updatedAt
   */
  exports.prototype.setUpdatedAt = function(updatedAt) {
    this['updated_at'] = updatedAt;
  }


  /**
   * @return {module:radiomanagermodels/ModelTypeOptions}
   */
  exports.prototype.getOptions = function() {
    return this['options'];
  }

  /**
   * @param {module:radiomanagermodels/ModelTypeOptions} options
   */
  exports.prototype.setOptions = function(options) {
    this['options'] = options;
  }


  /**
   * @return {Number}
   */
  exports.prototype.getOrder = function() {
    return this['order'];
  }

  /**
   * @param {Number} order
   */
  exports.prototype.setOrder = function(order) {
    this['order'] = order;
  }


  /**
   * @return {Date}
   */
  exports.prototype.getDeletedAt = function() {
    return this['deleted_at'];
  }

  /**
   * @param {Date} deletedAt
   */
  exports.prototype.setDeletedAt = function(deletedAt) {
    this['deleted_at'] = deletedAt;
  }


  /**
   * Allowed values for the <code>model</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ModelEnum = {
    /**
     * value: "broadcast"
     * @const
     */
    "broadcast": "broadcast",
    /**
     * value: "program"
     * @const
     */
    "program": "program",
    /**
     * value: "item"
     * @const
     */
    "item": "item",
    /**
     * value: "campaign"
     * @const
     */
    "campaign": "campaign",
    /**
     * value: "presenter"
     * @const
     */
    "presenter": "presenter",
    /**
     * value: "contact"
     * @const
     */
    "contact": "contact",
    /**
     * value: "external"
     * @const
     */
    "external": "external"  };


  return exports;
}));


