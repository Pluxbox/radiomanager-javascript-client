/**
 * RadioManager
 * RadioManager
 *
 * OpenAPI spec version: 2.0
 * Contact: support@pluxbox.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'radiomanagermodels/Block', 'radiomanagermodels/BlockRelations', 'radiomanagermodels/BlockRelationsBroadcast', 'radiomanagermodels/BlockRelationsBroadcastParams', 'radiomanagermodels/BlockRelationsItems', 'radiomanagermodels/BlockRelationsItemsParams', 'radiomanagermodels/BlockRelationsProgram', 'radiomanagermodels/BlockResults', 'radiomanagermodels/Broadcast', 'radiomanagermodels/BroadcastEPGDay', 'radiomanagermodels/BroadcastEPGRelations', 'radiomanagermodels/BroadcastInputOnly', 'radiomanagermodels/BroadcastOutputOnly', 'radiomanagermodels/BroadcastRelations', 'radiomanagermodels/BroadcastRelationsBlocks', 'radiomanagermodels/BroadcastRelationsGenre', 'radiomanagermodels/BroadcastRelationsItems', 'radiomanagermodels/BroadcastRelationsItemsParams', 'radiomanagermodels/BroadcastRelationsModelType', 'radiomanagermodels/BroadcastRelationsPresenters', 'radiomanagermodels/BroadcastRelationsTags', 'radiomanagermodels/BroadcastResults', 'radiomanagermodels/Campaign', 'radiomanagermodels/CampaignOutputOnly', 'radiomanagermodels/CampaignRelations', 'radiomanagermodels/CampaignRelationsItems', 'radiomanagermodels/CampaignRelationsItemsParams', 'radiomanagermodels/CampaignResults', 'radiomanagermodels/Contact', 'radiomanagermodels/ContactOutputOnly', 'radiomanagermodels/ContactRelations', 'radiomanagermodels/ContactRelationsItems', 'radiomanagermodels/ContactRelationsTags', 'radiomanagermodels/ContactRelationsTagsParams', 'radiomanagermodels/ContactResults', 'radiomanagermodels/Data', 'radiomanagermodels/Data1', 'radiomanagermodels/EPGResults', 'radiomanagermodels/Forbidden', 'radiomanagermodels/Genre', 'radiomanagermodels/GenreOutputOnly', 'radiomanagermodels/GenreRelations', 'radiomanagermodels/GenreRelationsBroadcasts', 'radiomanagermodels/GenreRelationsBroadcastsParams', 'radiomanagermodels/GenreRelationsPrograms', 'radiomanagermodels/GenreResults', 'radiomanagermodels/ImportItem', 'radiomanagermodels/InlineResponse202', 'radiomanagermodels/InternalServerError', 'radiomanagermodels/InviteUserData', 'radiomanagermodels/InviteUserSuccess', 'radiomanagermodels/Item', 'radiomanagermodels/ItemInputOnly', 'radiomanagermodels/ItemOutputOnly', 'radiomanagermodels/ItemRelations', 'radiomanagermodels/ItemRelationsBlock', 'radiomanagermodels/ItemRelationsCampaign', 'radiomanagermodels/ItemRelationsContacts', 'radiomanagermodels/ItemRelationsContactsParams', 'radiomanagermodels/ItemRelationsProgram', 'radiomanagermodels/ItemRelationsTags', 'radiomanagermodels/ItemResults', 'radiomanagermodels/ModelType', 'radiomanagermodels/ModelTypeOptions', 'radiomanagermodels/ModelTypeOutputOnly', 'radiomanagermodels/ModelTypeRelations', 'radiomanagermodels/ModelTypeRelationsBroadcasts', 'radiomanagermodels/ModelTypeRelationsCampaigns', 'radiomanagermodels/ModelTypeRelationsCampaignsParams', 'radiomanagermodels/ModelTypeRelationsContacts', 'radiomanagermodels/ModelTypeRelationsItems', 'radiomanagermodels/ModelTypeRelationsPresenters', 'radiomanagermodels/ModelTypeRelationsPrograms', 'radiomanagermodels/ModelTypeResults', 'radiomanagermodels/NotFound', 'radiomanagermodels/PostSuccess', 'radiomanagermodels/Presenter', 'radiomanagermodels/PresenterOutputOnly', 'radiomanagermodels/PresenterRelations', 'radiomanagermodels/PresenterRelationsBroadcasts', 'radiomanagermodels/PresenterRelationsPrograms', 'radiomanagermodels/PresenterRelationsProgramsParams', 'radiomanagermodels/PresenterResults', 'radiomanagermodels/Program', 'radiomanagermodels/ProgramInputOnly', 'radiomanagermodels/ProgramOutputOnly', 'radiomanagermodels/ProgramRelations', 'radiomanagermodels/ProgramRelationsBlocks', 'radiomanagermodels/ProgramRelationsBroadcasts', 'radiomanagermodels/ProgramRelationsItems', 'radiomanagermodels/ProgramRelationsItemsParams', 'radiomanagermodels/ProgramRelationsPresenters', 'radiomanagermodels/ProgramRelationsTags', 'radiomanagermodels/ProgramResults', 'radiomanagermodels/ReadOnly', 'radiomanagermodels/RelationsPlaceholder', 'radiomanagermodels/StationResult', 'radiomanagermodels/StationResultStation', 'radiomanagermodels/StationResultStationStartDays', 'radiomanagermodels/Story', 'radiomanagermodels/StoryInputOnly', 'radiomanagermodels/StoryOutputOnly', 'radiomanagermodels/StoryRelations', 'radiomanagermodels/StoryRelationsItems', 'radiomanagermodels/StoryRelationsTags', 'radiomanagermodels/StoryRelationsTagsParams', 'radiomanagermodels/StoryResults', 'radiomanagermodels/Success', 'radiomanagermodels/Tag', 'radiomanagermodels/TagOutputOnly', 'radiomanagermodels/TagRelations', 'radiomanagermodels/TagRelationsBroadcasts', 'radiomanagermodels/TagRelationsBroadcastsParams', 'radiomanagermodels/TagRelationsContacts', 'radiomanagermodels/TagRelationsItems', 'radiomanagermodels/TagRelationsPrograms', 'radiomanagermodels/TagResults', 'radiomanagermodels/TextString', 'radiomanagermodels/TooManyRequests', 'radiomanagermodels/UnprocessableEntity', 'radiomanagermodels/UserResult', 'radiomanagermodels/UserResultRoles', 'radiomanagermodels/UserResultSettings', 'radiomanagermodels/UserResults', 'radiomanagermodels/VisualResult', 'radiomanagermodels/BlockResult', 'radiomanagermodels/BroadcastDataInput', 'radiomanagermodels/BroadcastEPGResult', 'radiomanagermodels/BroadcastResult', 'radiomanagermodels/CampaignDataInput', 'radiomanagermodels/CampaignResult', 'radiomanagermodels/ContactDataInput', 'radiomanagermodels/ContactResult', 'radiomanagermodels/GenreResult', 'radiomanagermodels/ItemDataInput', 'radiomanagermodels/ItemResult', 'radiomanagermodels/ModelTypeResult', 'radiomanagermodels/PresenterDataInput', 'radiomanagermodels/PresenterEPGResult', 'radiomanagermodels/PresenterResult', 'radiomanagermodels/ProgramDataInput', 'radiomanagermodels/ProgramResult', 'radiomanagermodels/StoryDataInput', 'radiomanagermodels/StoryResult', 'radiomanagermodels/TagDataInput', 'radiomanagermodels/TagResult', 'radiomanagerclient/BlockApi', 'radiomanagerclient/BroadcastApi', 'radiomanagerclient/CampaignApi', 'radiomanagerclient/ContactApi', 'radiomanagerclient/GenreApi', 'radiomanagerclient/ItemApi', 'radiomanagerclient/ModelTypeApi', 'radiomanagerclient/PresenterApi', 'radiomanagerclient/ProgramApi', 'radiomanagerclient/StationApi', 'radiomanagerclient/StoryApi', 'radiomanagerclient/StringApi', 'radiomanagerclient/TagApi', 'radiomanagerclient/UserApi', 'radiomanagerclient/VisualSlideApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./radiomanagermodels/Block'), require('./radiomanagermodels/BlockRelations'), require('./radiomanagermodels/BlockRelationsBroadcast'), require('./radiomanagermodels/BlockRelationsBroadcastParams'), require('./radiomanagermodels/BlockRelationsItems'), require('./radiomanagermodels/BlockRelationsItemsParams'), require('./radiomanagermodels/BlockRelationsProgram'), require('./radiomanagermodels/BlockResults'), require('./radiomanagermodels/Broadcast'), require('./radiomanagermodels/BroadcastEPGDay'), require('./radiomanagermodels/BroadcastEPGRelations'), require('./radiomanagermodels/BroadcastInputOnly'), require('./radiomanagermodels/BroadcastOutputOnly'), require('./radiomanagermodels/BroadcastRelations'), require('./radiomanagermodels/BroadcastRelationsBlocks'), require('./radiomanagermodels/BroadcastRelationsGenre'), require('./radiomanagermodels/BroadcastRelationsItems'), require('./radiomanagermodels/BroadcastRelationsItemsParams'), require('./radiomanagermodels/BroadcastRelationsModelType'), require('./radiomanagermodels/BroadcastRelationsPresenters'), require('./radiomanagermodels/BroadcastRelationsTags'), require('./radiomanagermodels/BroadcastResults'), require('./radiomanagermodels/Campaign'), require('./radiomanagermodels/CampaignOutputOnly'), require('./radiomanagermodels/CampaignRelations'), require('./radiomanagermodels/CampaignRelationsItems'), require('./radiomanagermodels/CampaignRelationsItemsParams'), require('./radiomanagermodels/CampaignResults'), require('./radiomanagermodels/Contact'), require('./radiomanagermodels/ContactOutputOnly'), require('./radiomanagermodels/ContactRelations'), require('./radiomanagermodels/ContactRelationsItems'), require('./radiomanagermodels/ContactRelationsTags'), require('./radiomanagermodels/ContactRelationsTagsParams'), require('./radiomanagermodels/ContactResults'), require('./radiomanagermodels/Data'), require('./radiomanagermodels/Data1'), require('./radiomanagermodels/EPGResults'), require('./radiomanagermodels/Forbidden'), require('./radiomanagermodels/Genre'), require('./radiomanagermodels/GenreOutputOnly'), require('./radiomanagermodels/GenreRelations'), require('./radiomanagermodels/GenreRelationsBroadcasts'), require('./radiomanagermodels/GenreRelationsBroadcastsParams'), require('./radiomanagermodels/GenreRelationsPrograms'), require('./radiomanagermodels/GenreResults'), require('./radiomanagermodels/ImportItem'), require('./radiomanagermodels/InlineResponse202'), require('./radiomanagermodels/InternalServerError'), require('./radiomanagermodels/InviteUserData'), require('./radiomanagermodels/InviteUserSuccess'), require('./radiomanagermodels/Item'), require('./radiomanagermodels/ItemInputOnly'), require('./radiomanagermodels/ItemOutputOnly'), require('./radiomanagermodels/ItemRelations'), require('./radiomanagermodels/ItemRelationsBlock'), require('./radiomanagermodels/ItemRelationsCampaign'), require('./radiomanagermodels/ItemRelationsContacts'), require('./radiomanagermodels/ItemRelationsContactsParams'), require('./radiomanagermodels/ItemRelationsProgram'), require('./radiomanagermodels/ItemRelationsTags'), require('./radiomanagermodels/ItemResults'), require('./radiomanagermodels/ModelType'), require('./radiomanagermodels/ModelTypeOptions'), require('./radiomanagermodels/ModelTypeOutputOnly'), require('./radiomanagermodels/ModelTypeRelations'), require('./radiomanagermodels/ModelTypeRelationsBroadcasts'), require('./radiomanagermodels/ModelTypeRelationsCampaigns'), require('./radiomanagermodels/ModelTypeRelationsCampaignsParams'), require('./radiomanagermodels/ModelTypeRelationsContacts'), require('./radiomanagermodels/ModelTypeRelationsItems'), require('./radiomanagermodels/ModelTypeRelationsPresenters'), require('./radiomanagermodels/ModelTypeRelationsPrograms'), require('./radiomanagermodels/ModelTypeResults'), require('./radiomanagermodels/NotFound'), require('./radiomanagermodels/PostSuccess'), require('./radiomanagermodels/Presenter'), require('./radiomanagermodels/PresenterOutputOnly'), require('./radiomanagermodels/PresenterRelations'), require('./radiomanagermodels/PresenterRelationsBroadcasts'), require('./radiomanagermodels/PresenterRelationsPrograms'), require('./radiomanagermodels/PresenterRelationsProgramsParams'), require('./radiomanagermodels/PresenterResults'), require('./radiomanagermodels/Program'), require('./radiomanagermodels/ProgramInputOnly'), require('./radiomanagermodels/ProgramOutputOnly'), require('./radiomanagermodels/ProgramRelations'), require('./radiomanagermodels/ProgramRelationsBlocks'), require('./radiomanagermodels/ProgramRelationsBroadcasts'), require('./radiomanagermodels/ProgramRelationsItems'), require('./radiomanagermodels/ProgramRelationsItemsParams'), require('./radiomanagermodels/ProgramRelationsPresenters'), require('./radiomanagermodels/ProgramRelationsTags'), require('./radiomanagermodels/ProgramResults'), require('./radiomanagermodels/ReadOnly'), require('./radiomanagermodels/RelationsPlaceholder'), require('./radiomanagermodels/StationResult'), require('./radiomanagermodels/StationResultStation'), require('./radiomanagermodels/StationResultStationStartDays'), require('./radiomanagermodels/Story'), require('./radiomanagermodels/StoryInputOnly'), require('./radiomanagermodels/StoryOutputOnly'), require('./radiomanagermodels/StoryRelations'), require('./radiomanagermodels/StoryRelationsItems'), require('./radiomanagermodels/StoryRelationsTags'), require('./radiomanagermodels/StoryRelationsTagsParams'), require('./radiomanagermodels/StoryResults'), require('./radiomanagermodels/Success'), require('./radiomanagermodels/Tag'), require('./radiomanagermodels/TagOutputOnly'), require('./radiomanagermodels/TagRelations'), require('./radiomanagermodels/TagRelationsBroadcasts'), require('./radiomanagermodels/TagRelationsBroadcastsParams'), require('./radiomanagermodels/TagRelationsContacts'), require('./radiomanagermodels/TagRelationsItems'), require('./radiomanagermodels/TagRelationsPrograms'), require('./radiomanagermodels/TagResults'), require('./radiomanagermodels/TextString'), require('./radiomanagermodels/TooManyRequests'), require('./radiomanagermodels/UnprocessableEntity'), require('./radiomanagermodels/UserResult'), require('./radiomanagermodels/UserResultRoles'), require('./radiomanagermodels/UserResultSettings'), require('./radiomanagermodels/UserResults'), require('./radiomanagermodels/VisualResult'), require('./radiomanagermodels/BlockResult'), require('./radiomanagermodels/BroadcastDataInput'), require('./radiomanagermodels/BroadcastEPGResult'), require('./radiomanagermodels/BroadcastResult'), require('./radiomanagermodels/CampaignDataInput'), require('./radiomanagermodels/CampaignResult'), require('./radiomanagermodels/ContactDataInput'), require('./radiomanagermodels/ContactResult'), require('./radiomanagermodels/GenreResult'), require('./radiomanagermodels/ItemDataInput'), require('./radiomanagermodels/ItemResult'), require('./radiomanagermodels/ModelTypeResult'), require('./radiomanagermodels/PresenterDataInput'), require('./radiomanagermodels/PresenterEPGResult'), require('./radiomanagermodels/PresenterResult'), require('./radiomanagermodels/ProgramDataInput'), require('./radiomanagermodels/ProgramResult'), require('./radiomanagermodels/StoryDataInput'), require('./radiomanagermodels/StoryResult'), require('./radiomanagermodels/TagDataInput'), require('./radiomanagermodels/TagResult'), require('./radiomanagerclient/BlockApi'), require('./radiomanagerclient/BroadcastApi'), require('./radiomanagerclient/CampaignApi'), require('./radiomanagerclient/ContactApi'), require('./radiomanagerclient/GenreApi'), require('./radiomanagerclient/ItemApi'), require('./radiomanagerclient/ModelTypeApi'), require('./radiomanagerclient/PresenterApi'), require('./radiomanagerclient/ProgramApi'), require('./radiomanagerclient/StationApi'), require('./radiomanagerclient/StoryApi'), require('./radiomanagerclient/StringApi'), require('./radiomanagerclient/TagApi'), require('./radiomanagerclient/UserApi'), require('./radiomanagerclient/VisualSlideApi'));
  }
}(function(ApiClient, Block, BlockRelations, BlockRelationsBroadcast, BlockRelationsBroadcastParams, BlockRelationsItems, BlockRelationsItemsParams, BlockRelationsProgram, BlockResults, Broadcast, BroadcastEPGDay, BroadcastEPGRelations, BroadcastInputOnly, BroadcastOutputOnly, BroadcastRelations, BroadcastRelationsBlocks, BroadcastRelationsGenre, BroadcastRelationsItems, BroadcastRelationsItemsParams, BroadcastRelationsModelType, BroadcastRelationsPresenters, BroadcastRelationsTags, BroadcastResults, Campaign, CampaignOutputOnly, CampaignRelations, CampaignRelationsItems, CampaignRelationsItemsParams, CampaignResults, Contact, ContactOutputOnly, ContactRelations, ContactRelationsItems, ContactRelationsTags, ContactRelationsTagsParams, ContactResults, Data, Data1, EPGResults, Forbidden, Genre, GenreOutputOnly, GenreRelations, GenreRelationsBroadcasts, GenreRelationsBroadcastsParams, GenreRelationsPrograms, GenreResults, ImportItem, InlineResponse202, InternalServerError, InviteUserData, InviteUserSuccess, Item, ItemInputOnly, ItemOutputOnly, ItemRelations, ItemRelationsBlock, ItemRelationsCampaign, ItemRelationsContacts, ItemRelationsContactsParams, ItemRelationsProgram, ItemRelationsTags, ItemResults, ModelType, ModelTypeOptions, ModelTypeOutputOnly, ModelTypeRelations, ModelTypeRelationsBroadcasts, ModelTypeRelationsCampaigns, ModelTypeRelationsCampaignsParams, ModelTypeRelationsContacts, ModelTypeRelationsItems, ModelTypeRelationsPresenters, ModelTypeRelationsPrograms, ModelTypeResults, NotFound, PostSuccess, Presenter, PresenterOutputOnly, PresenterRelations, PresenterRelationsBroadcasts, PresenterRelationsPrograms, PresenterRelationsProgramsParams, PresenterResults, Program, ProgramInputOnly, ProgramOutputOnly, ProgramRelations, ProgramRelationsBlocks, ProgramRelationsBroadcasts, ProgramRelationsItems, ProgramRelationsItemsParams, ProgramRelationsPresenters, ProgramRelationsTags, ProgramResults, ReadOnly, RelationsPlaceholder, StationResult, StationResultStation, StationResultStationStartDays, Story, StoryInputOnly, StoryOutputOnly, StoryRelations, StoryRelationsItems, StoryRelationsTags, StoryRelationsTagsParams, StoryResults, Success, Tag, TagOutputOnly, TagRelations, TagRelationsBroadcasts, TagRelationsBroadcastsParams, TagRelationsContacts, TagRelationsItems, TagRelationsPrograms, TagResults, TextString, TooManyRequests, UnprocessableEntity, UserResult, UserResultRoles, UserResultSettings, UserResults, VisualResult, BlockResult, BroadcastDataInput, BroadcastEPGResult, BroadcastResult, CampaignDataInput, CampaignResult, ContactDataInput, ContactResult, GenreResult, ItemDataInput, ItemResult, ModelTypeResult, PresenterDataInput, PresenterEPGResult, PresenterResult, ProgramDataInput, ProgramResult, StoryDataInput, StoryResult, TagDataInput, TagResult, BlockApi, BroadcastApi, CampaignApi, ContactApi, GenreApi, ItemApi, ModelTypeApi, PresenterApi, ProgramApi, StationApi, StoryApi, StringApi, TagApi, UserApi, VisualSlideApi) {
  'use strict';

  /**
   * RadioManager.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var radiomanager = require('index'); // See note below*.
   * var xxxSvc = new radiomanager.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new radiomanager.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new radiomanager.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new radiomanager.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 2.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Block model constructor.
     * @property {module:radiomanagermodels/Block}
     */
    Block: Block,
    /**
     * The BlockRelations model constructor.
     * @property {module:radiomanagermodels/BlockRelations}
     */
    BlockRelations: BlockRelations,
    /**
     * The BlockRelationsBroadcast model constructor.
     * @property {module:radiomanagermodels/BlockRelationsBroadcast}
     */
    BlockRelationsBroadcast: BlockRelationsBroadcast,
    /**
     * The BlockRelationsBroadcastParams model constructor.
     * @property {module:radiomanagermodels/BlockRelationsBroadcastParams}
     */
    BlockRelationsBroadcastParams: BlockRelationsBroadcastParams,
    /**
     * The BlockRelationsItems model constructor.
     * @property {module:radiomanagermodels/BlockRelationsItems}
     */
    BlockRelationsItems: BlockRelationsItems,
    /**
     * The BlockRelationsItemsParams model constructor.
     * @property {module:radiomanagermodels/BlockRelationsItemsParams}
     */
    BlockRelationsItemsParams: BlockRelationsItemsParams,
    /**
     * The BlockRelationsProgram model constructor.
     * @property {module:radiomanagermodels/BlockRelationsProgram}
     */
    BlockRelationsProgram: BlockRelationsProgram,
    /**
     * The BlockResults model constructor.
     * @property {module:radiomanagermodels/BlockResults}
     */
    BlockResults: BlockResults,
    /**
     * The Broadcast model constructor.
     * @property {module:radiomanagermodels/Broadcast}
     */
    Broadcast: Broadcast,
    /**
     * The BroadcastEPGDay model constructor.
     * @property {module:radiomanagermodels/BroadcastEPGDay}
     */
    BroadcastEPGDay: BroadcastEPGDay,
    /**
     * The BroadcastEPGRelations model constructor.
     * @property {module:radiomanagermodels/BroadcastEPGRelations}
     */
    BroadcastEPGRelations: BroadcastEPGRelations,
    /**
     * The BroadcastInputOnly model constructor.
     * @property {module:radiomanagermodels/BroadcastInputOnly}
     */
    BroadcastInputOnly: BroadcastInputOnly,
    /**
     * The BroadcastOutputOnly model constructor.
     * @property {module:radiomanagermodels/BroadcastOutputOnly}
     */
    BroadcastOutputOnly: BroadcastOutputOnly,
    /**
     * The BroadcastRelations model constructor.
     * @property {module:radiomanagermodels/BroadcastRelations}
     */
    BroadcastRelations: BroadcastRelations,
    /**
     * The BroadcastRelationsBlocks model constructor.
     * @property {module:radiomanagermodels/BroadcastRelationsBlocks}
     */
    BroadcastRelationsBlocks: BroadcastRelationsBlocks,
    /**
     * The BroadcastRelationsGenre model constructor.
     * @property {module:radiomanagermodels/BroadcastRelationsGenre}
     */
    BroadcastRelationsGenre: BroadcastRelationsGenre,
    /**
     * The BroadcastRelationsItems model constructor.
     * @property {module:radiomanagermodels/BroadcastRelationsItems}
     */
    BroadcastRelationsItems: BroadcastRelationsItems,
    /**
     * The BroadcastRelationsItemsParams model constructor.
     * @property {module:radiomanagermodels/BroadcastRelationsItemsParams}
     */
    BroadcastRelationsItemsParams: BroadcastRelationsItemsParams,
    /**
     * The BroadcastRelationsModelType model constructor.
     * @property {module:radiomanagermodels/BroadcastRelationsModelType}
     */
    BroadcastRelationsModelType: BroadcastRelationsModelType,
    /**
     * The BroadcastRelationsPresenters model constructor.
     * @property {module:radiomanagermodels/BroadcastRelationsPresenters}
     */
    BroadcastRelationsPresenters: BroadcastRelationsPresenters,
    /**
     * The BroadcastRelationsTags model constructor.
     * @property {module:radiomanagermodels/BroadcastRelationsTags}
     */
    BroadcastRelationsTags: BroadcastRelationsTags,
    /**
     * The BroadcastResults model constructor.
     * @property {module:radiomanagermodels/BroadcastResults}
     */
    BroadcastResults: BroadcastResults,
    /**
     * The Campaign model constructor.
     * @property {module:radiomanagermodels/Campaign}
     */
    Campaign: Campaign,
    /**
     * The CampaignOutputOnly model constructor.
     * @property {module:radiomanagermodels/CampaignOutputOnly}
     */
    CampaignOutputOnly: CampaignOutputOnly,
    /**
     * The CampaignRelations model constructor.
     * @property {module:radiomanagermodels/CampaignRelations}
     */
    CampaignRelations: CampaignRelations,
    /**
     * The CampaignRelationsItems model constructor.
     * @property {module:radiomanagermodels/CampaignRelationsItems}
     */
    CampaignRelationsItems: CampaignRelationsItems,
    /**
     * The CampaignRelationsItemsParams model constructor.
     * @property {module:radiomanagermodels/CampaignRelationsItemsParams}
     */
    CampaignRelationsItemsParams: CampaignRelationsItemsParams,
    /**
     * The CampaignResults model constructor.
     * @property {module:radiomanagermodels/CampaignResults}
     */
    CampaignResults: CampaignResults,
    /**
     * The Contact model constructor.
     * @property {module:radiomanagermodels/Contact}
     */
    Contact: Contact,
    /**
     * The ContactOutputOnly model constructor.
     * @property {module:radiomanagermodels/ContactOutputOnly}
     */
    ContactOutputOnly: ContactOutputOnly,
    /**
     * The ContactRelations model constructor.
     * @property {module:radiomanagermodels/ContactRelations}
     */
    ContactRelations: ContactRelations,
    /**
     * The ContactRelationsItems model constructor.
     * @property {module:radiomanagermodels/ContactRelationsItems}
     */
    ContactRelationsItems: ContactRelationsItems,
    /**
     * The ContactRelationsTags model constructor.
     * @property {module:radiomanagermodels/ContactRelationsTags}
     */
    ContactRelationsTags: ContactRelationsTags,
    /**
     * The ContactRelationsTagsParams model constructor.
     * @property {module:radiomanagermodels/ContactRelationsTagsParams}
     */
    ContactRelationsTagsParams: ContactRelationsTagsParams,
    /**
     * The ContactResults model constructor.
     * @property {module:radiomanagermodels/ContactResults}
     */
    ContactResults: ContactResults,
    /**
     * The Data model constructor.
     * @property {module:radiomanagermodels/Data}
     */
    Data: Data,
    /**
     * The Data1 model constructor.
     * @property {module:radiomanagermodels/Data1}
     */
    Data1: Data1,
    /**
     * The EPGResults model constructor.
     * @property {module:radiomanagermodels/EPGResults}
     */
    EPGResults: EPGResults,
    /**
     * The Forbidden model constructor.
     * @property {module:radiomanagermodels/Forbidden}
     */
    Forbidden: Forbidden,
    /**
     * The Genre model constructor.
     * @property {module:radiomanagermodels/Genre}
     */
    Genre: Genre,
    /**
     * The GenreOutputOnly model constructor.
     * @property {module:radiomanagermodels/GenreOutputOnly}
     */
    GenreOutputOnly: GenreOutputOnly,
    /**
     * The GenreRelations model constructor.
     * @property {module:radiomanagermodels/GenreRelations}
     */
    GenreRelations: GenreRelations,
    /**
     * The GenreRelationsBroadcasts model constructor.
     * @property {module:radiomanagermodels/GenreRelationsBroadcasts}
     */
    GenreRelationsBroadcasts: GenreRelationsBroadcasts,
    /**
     * The GenreRelationsBroadcastsParams model constructor.
     * @property {module:radiomanagermodels/GenreRelationsBroadcastsParams}
     */
    GenreRelationsBroadcastsParams: GenreRelationsBroadcastsParams,
    /**
     * The GenreRelationsPrograms model constructor.
     * @property {module:radiomanagermodels/GenreRelationsPrograms}
     */
    GenreRelationsPrograms: GenreRelationsPrograms,
    /**
     * The GenreResults model constructor.
     * @property {module:radiomanagermodels/GenreResults}
     */
    GenreResults: GenreResults,
    /**
     * The ImportItem model constructor.
     * @property {module:radiomanagermodels/ImportItem}
     */
    ImportItem: ImportItem,
    /**
     * The InlineResponse202 model constructor.
     * @property {module:radiomanagermodels/InlineResponse202}
     */
    InlineResponse202: InlineResponse202,
    /**
     * The InternalServerError model constructor.
     * @property {module:radiomanagermodels/InternalServerError}
     */
    InternalServerError: InternalServerError,
    /**
     * The InviteUserData model constructor.
     * @property {module:radiomanagermodels/InviteUserData}
     */
    InviteUserData: InviteUserData,
    /**
     * The InviteUserSuccess model constructor.
     * @property {module:radiomanagermodels/InviteUserSuccess}
     */
    InviteUserSuccess: InviteUserSuccess,
    /**
     * The Item model constructor.
     * @property {module:radiomanagermodels/Item}
     */
    Item: Item,
    /**
     * The ItemInputOnly model constructor.
     * @property {module:radiomanagermodels/ItemInputOnly}
     */
    ItemInputOnly: ItemInputOnly,
    /**
     * The ItemOutputOnly model constructor.
     * @property {module:radiomanagermodels/ItemOutputOnly}
     */
    ItemOutputOnly: ItemOutputOnly,
    /**
     * The ItemRelations model constructor.
     * @property {module:radiomanagermodels/ItemRelations}
     */
    ItemRelations: ItemRelations,
    /**
     * The ItemRelationsBlock model constructor.
     * @property {module:radiomanagermodels/ItemRelationsBlock}
     */
    ItemRelationsBlock: ItemRelationsBlock,
    /**
     * The ItemRelationsCampaign model constructor.
     * @property {module:radiomanagermodels/ItemRelationsCampaign}
     */
    ItemRelationsCampaign: ItemRelationsCampaign,
    /**
     * The ItemRelationsContacts model constructor.
     * @property {module:radiomanagermodels/ItemRelationsContacts}
     */
    ItemRelationsContacts: ItemRelationsContacts,
    /**
     * The ItemRelationsContactsParams model constructor.
     * @property {module:radiomanagermodels/ItemRelationsContactsParams}
     */
    ItemRelationsContactsParams: ItemRelationsContactsParams,
    /**
     * The ItemRelationsProgram model constructor.
     * @property {module:radiomanagermodels/ItemRelationsProgram}
     */
    ItemRelationsProgram: ItemRelationsProgram,
    /**
     * The ItemRelationsTags model constructor.
     * @property {module:radiomanagermodels/ItemRelationsTags}
     */
    ItemRelationsTags: ItemRelationsTags,
    /**
     * The ItemResults model constructor.
     * @property {module:radiomanagermodels/ItemResults}
     */
    ItemResults: ItemResults,
    /**
     * The ModelType model constructor.
     * @property {module:radiomanagermodels/ModelType}
     */
    ModelType: ModelType,
    /**
     * The ModelTypeOptions model constructor.
     * @property {module:radiomanagermodels/ModelTypeOptions}
     */
    ModelTypeOptions: ModelTypeOptions,
    /**
     * The ModelTypeOutputOnly model constructor.
     * @property {module:radiomanagermodels/ModelTypeOutputOnly}
     */
    ModelTypeOutputOnly: ModelTypeOutputOnly,
    /**
     * The ModelTypeRelations model constructor.
     * @property {module:radiomanagermodels/ModelTypeRelations}
     */
    ModelTypeRelations: ModelTypeRelations,
    /**
     * The ModelTypeRelationsBroadcasts model constructor.
     * @property {module:radiomanagermodels/ModelTypeRelationsBroadcasts}
     */
    ModelTypeRelationsBroadcasts: ModelTypeRelationsBroadcasts,
    /**
     * The ModelTypeRelationsCampaigns model constructor.
     * @property {module:radiomanagermodels/ModelTypeRelationsCampaigns}
     */
    ModelTypeRelationsCampaigns: ModelTypeRelationsCampaigns,
    /**
     * The ModelTypeRelationsCampaignsParams model constructor.
     * @property {module:radiomanagermodels/ModelTypeRelationsCampaignsParams}
     */
    ModelTypeRelationsCampaignsParams: ModelTypeRelationsCampaignsParams,
    /**
     * The ModelTypeRelationsContacts model constructor.
     * @property {module:radiomanagermodels/ModelTypeRelationsContacts}
     */
    ModelTypeRelationsContacts: ModelTypeRelationsContacts,
    /**
     * The ModelTypeRelationsItems model constructor.
     * @property {module:radiomanagermodels/ModelTypeRelationsItems}
     */
    ModelTypeRelationsItems: ModelTypeRelationsItems,
    /**
     * The ModelTypeRelationsPresenters model constructor.
     * @property {module:radiomanagermodels/ModelTypeRelationsPresenters}
     */
    ModelTypeRelationsPresenters: ModelTypeRelationsPresenters,
    /**
     * The ModelTypeRelationsPrograms model constructor.
     * @property {module:radiomanagermodels/ModelTypeRelationsPrograms}
     */
    ModelTypeRelationsPrograms: ModelTypeRelationsPrograms,
    /**
     * The ModelTypeResults model constructor.
     * @property {module:radiomanagermodels/ModelTypeResults}
     */
    ModelTypeResults: ModelTypeResults,
    /**
     * The NotFound model constructor.
     * @property {module:radiomanagermodels/NotFound}
     */
    NotFound: NotFound,
    /**
     * The PostSuccess model constructor.
     * @property {module:radiomanagermodels/PostSuccess}
     */
    PostSuccess: PostSuccess,
    /**
     * The Presenter model constructor.
     * @property {module:radiomanagermodels/Presenter}
     */
    Presenter: Presenter,
    /**
     * The PresenterOutputOnly model constructor.
     * @property {module:radiomanagermodels/PresenterOutputOnly}
     */
    PresenterOutputOnly: PresenterOutputOnly,
    /**
     * The PresenterRelations model constructor.
     * @property {module:radiomanagermodels/PresenterRelations}
     */
    PresenterRelations: PresenterRelations,
    /**
     * The PresenterRelationsBroadcasts model constructor.
     * @property {module:radiomanagermodels/PresenterRelationsBroadcasts}
     */
    PresenterRelationsBroadcasts: PresenterRelationsBroadcasts,
    /**
     * The PresenterRelationsPrograms model constructor.
     * @property {module:radiomanagermodels/PresenterRelationsPrograms}
     */
    PresenterRelationsPrograms: PresenterRelationsPrograms,
    /**
     * The PresenterRelationsProgramsParams model constructor.
     * @property {module:radiomanagermodels/PresenterRelationsProgramsParams}
     */
    PresenterRelationsProgramsParams: PresenterRelationsProgramsParams,
    /**
     * The PresenterResults model constructor.
     * @property {module:radiomanagermodels/PresenterResults}
     */
    PresenterResults: PresenterResults,
    /**
     * The Program model constructor.
     * @property {module:radiomanagermodels/Program}
     */
    Program: Program,
    /**
     * The ProgramInputOnly model constructor.
     * @property {module:radiomanagermodels/ProgramInputOnly}
     */
    ProgramInputOnly: ProgramInputOnly,
    /**
     * The ProgramOutputOnly model constructor.
     * @property {module:radiomanagermodels/ProgramOutputOnly}
     */
    ProgramOutputOnly: ProgramOutputOnly,
    /**
     * The ProgramRelations model constructor.
     * @property {module:radiomanagermodels/ProgramRelations}
     */
    ProgramRelations: ProgramRelations,
    /**
     * The ProgramRelationsBlocks model constructor.
     * @property {module:radiomanagermodels/ProgramRelationsBlocks}
     */
    ProgramRelationsBlocks: ProgramRelationsBlocks,
    /**
     * The ProgramRelationsBroadcasts model constructor.
     * @property {module:radiomanagermodels/ProgramRelationsBroadcasts}
     */
    ProgramRelationsBroadcasts: ProgramRelationsBroadcasts,
    /**
     * The ProgramRelationsItems model constructor.
     * @property {module:radiomanagermodels/ProgramRelationsItems}
     */
    ProgramRelationsItems: ProgramRelationsItems,
    /**
     * The ProgramRelationsItemsParams model constructor.
     * @property {module:radiomanagermodels/ProgramRelationsItemsParams}
     */
    ProgramRelationsItemsParams: ProgramRelationsItemsParams,
    /**
     * The ProgramRelationsPresenters model constructor.
     * @property {module:radiomanagermodels/ProgramRelationsPresenters}
     */
    ProgramRelationsPresenters: ProgramRelationsPresenters,
    /**
     * The ProgramRelationsTags model constructor.
     * @property {module:radiomanagermodels/ProgramRelationsTags}
     */
    ProgramRelationsTags: ProgramRelationsTags,
    /**
     * The ProgramResults model constructor.
     * @property {module:radiomanagermodels/ProgramResults}
     */
    ProgramResults: ProgramResults,
    /**
     * The ReadOnly model constructor.
     * @property {module:radiomanagermodels/ReadOnly}
     */
    ReadOnly: ReadOnly,
    /**
     * The RelationsPlaceholder model constructor.
     * @property {module:radiomanagermodels/RelationsPlaceholder}
     */
    RelationsPlaceholder: RelationsPlaceholder,
    /**
     * The StationResult model constructor.
     * @property {module:radiomanagermodels/StationResult}
     */
    StationResult: StationResult,
    /**
     * The StationResultStation model constructor.
     * @property {module:radiomanagermodels/StationResultStation}
     */
    StationResultStation: StationResultStation,
    /**
     * The StationResultStationStartDays model constructor.
     * @property {module:radiomanagermodels/StationResultStationStartDays}
     */
    StationResultStationStartDays: StationResultStationStartDays,
    /**
     * The Story model constructor.
     * @property {module:radiomanagermodels/Story}
     */
    Story: Story,
    /**
     * The StoryInputOnly model constructor.
     * @property {module:radiomanagermodels/StoryInputOnly}
     */
    StoryInputOnly: StoryInputOnly,
    /**
     * The StoryOutputOnly model constructor.
     * @property {module:radiomanagermodels/StoryOutputOnly}
     */
    StoryOutputOnly: StoryOutputOnly,
    /**
     * The StoryRelations model constructor.
     * @property {module:radiomanagermodels/StoryRelations}
     */
    StoryRelations: StoryRelations,
    /**
     * The StoryRelationsItems model constructor.
     * @property {module:radiomanagermodels/StoryRelationsItems}
     */
    StoryRelationsItems: StoryRelationsItems,
    /**
     * The StoryRelationsTags model constructor.
     * @property {module:radiomanagermodels/StoryRelationsTags}
     */
    StoryRelationsTags: StoryRelationsTags,
    /**
     * The StoryRelationsTagsParams model constructor.
     * @property {module:radiomanagermodels/StoryRelationsTagsParams}
     */
    StoryRelationsTagsParams: StoryRelationsTagsParams,
    /**
     * The StoryResults model constructor.
     * @property {module:radiomanagermodels/StoryResults}
     */
    StoryResults: StoryResults,
    /**
     * The Success model constructor.
     * @property {module:radiomanagermodels/Success}
     */
    Success: Success,
    /**
     * The Tag model constructor.
     * @property {module:radiomanagermodels/Tag}
     */
    Tag: Tag,
    /**
     * The TagOutputOnly model constructor.
     * @property {module:radiomanagermodels/TagOutputOnly}
     */
    TagOutputOnly: TagOutputOnly,
    /**
     * The TagRelations model constructor.
     * @property {module:radiomanagermodels/TagRelations}
     */
    TagRelations: TagRelations,
    /**
     * The TagRelationsBroadcasts model constructor.
     * @property {module:radiomanagermodels/TagRelationsBroadcasts}
     */
    TagRelationsBroadcasts: TagRelationsBroadcasts,
    /**
     * The TagRelationsBroadcastsParams model constructor.
     * @property {module:radiomanagermodels/TagRelationsBroadcastsParams}
     */
    TagRelationsBroadcastsParams: TagRelationsBroadcastsParams,
    /**
     * The TagRelationsContacts model constructor.
     * @property {module:radiomanagermodels/TagRelationsContacts}
     */
    TagRelationsContacts: TagRelationsContacts,
    /**
     * The TagRelationsItems model constructor.
     * @property {module:radiomanagermodels/TagRelationsItems}
     */
    TagRelationsItems: TagRelationsItems,
    /**
     * The TagRelationsPrograms model constructor.
     * @property {module:radiomanagermodels/TagRelationsPrograms}
     */
    TagRelationsPrograms: TagRelationsPrograms,
    /**
     * The TagResults model constructor.
     * @property {module:radiomanagermodels/TagResults}
     */
    TagResults: TagResults,
    /**
     * The TextString model constructor.
     * @property {module:radiomanagermodels/TextString}
     */
    TextString: TextString,
    /**
     * The TooManyRequests model constructor.
     * @property {module:radiomanagermodels/TooManyRequests}
     */
    TooManyRequests: TooManyRequests,
    /**
     * The UnprocessableEntity model constructor.
     * @property {module:radiomanagermodels/UnprocessableEntity}
     */
    UnprocessableEntity: UnprocessableEntity,
    /**
     * The UserResult model constructor.
     * @property {module:radiomanagermodels/UserResult}
     */
    UserResult: UserResult,
    /**
     * The UserResultRoles model constructor.
     * @property {module:radiomanagermodels/UserResultRoles}
     */
    UserResultRoles: UserResultRoles,
    /**
     * The UserResultSettings model constructor.
     * @property {module:radiomanagermodels/UserResultSettings}
     */
    UserResultSettings: UserResultSettings,
    /**
     * The UserResults model constructor.
     * @property {module:radiomanagermodels/UserResults}
     */
    UserResults: UserResults,
    /**
     * The VisualResult model constructor.
     * @property {module:radiomanagermodels/VisualResult}
     */
    VisualResult: VisualResult,
    /**
     * The BlockResult model constructor.
     * @property {module:radiomanagermodels/BlockResult}
     */
    BlockResult: BlockResult,
    /**
     * The BroadcastDataInput model constructor.
     * @property {module:radiomanagermodels/BroadcastDataInput}
     */
    BroadcastDataInput: BroadcastDataInput,
    /**
     * The BroadcastEPGResult model constructor.
     * @property {module:radiomanagermodels/BroadcastEPGResult}
     */
    BroadcastEPGResult: BroadcastEPGResult,
    /**
     * The BroadcastResult model constructor.
     * @property {module:radiomanagermodels/BroadcastResult}
     */
    BroadcastResult: BroadcastResult,
    /**
     * The CampaignDataInput model constructor.
     * @property {module:radiomanagermodels/CampaignDataInput}
     */
    CampaignDataInput: CampaignDataInput,
    /**
     * The CampaignResult model constructor.
     * @property {module:radiomanagermodels/CampaignResult}
     */
    CampaignResult: CampaignResult,
    /**
     * The ContactDataInput model constructor.
     * @property {module:radiomanagermodels/ContactDataInput}
     */
    ContactDataInput: ContactDataInput,
    /**
     * The ContactResult model constructor.
     * @property {module:radiomanagermodels/ContactResult}
     */
    ContactResult: ContactResult,
    /**
     * The GenreResult model constructor.
     * @property {module:radiomanagermodels/GenreResult}
     */
    GenreResult: GenreResult,
    /**
     * The ItemDataInput model constructor.
     * @property {module:radiomanagermodels/ItemDataInput}
     */
    ItemDataInput: ItemDataInput,
    /**
     * The ItemResult model constructor.
     * @property {module:radiomanagermodels/ItemResult}
     */
    ItemResult: ItemResult,
    /**
     * The ModelTypeResult model constructor.
     * @property {module:radiomanagermodels/ModelTypeResult}
     */
    ModelTypeResult: ModelTypeResult,
    /**
     * The PresenterDataInput model constructor.
     * @property {module:radiomanagermodels/PresenterDataInput}
     */
    PresenterDataInput: PresenterDataInput,
    /**
     * The PresenterEPGResult model constructor.
     * @property {module:radiomanagermodels/PresenterEPGResult}
     */
    PresenterEPGResult: PresenterEPGResult,
    /**
     * The PresenterResult model constructor.
     * @property {module:radiomanagermodels/PresenterResult}
     */
    PresenterResult: PresenterResult,
    /**
     * The ProgramDataInput model constructor.
     * @property {module:radiomanagermodels/ProgramDataInput}
     */
    ProgramDataInput: ProgramDataInput,
    /**
     * The ProgramResult model constructor.
     * @property {module:radiomanagermodels/ProgramResult}
     */
    ProgramResult: ProgramResult,
    /**
     * The StoryDataInput model constructor.
     * @property {module:radiomanagermodels/StoryDataInput}
     */
    StoryDataInput: StoryDataInput,
    /**
     * The StoryResult model constructor.
     * @property {module:radiomanagermodels/StoryResult}
     */
    StoryResult: StoryResult,
    /**
     * The TagDataInput model constructor.
     * @property {module:radiomanagermodels/TagDataInput}
     */
    TagDataInput: TagDataInput,
    /**
     * The TagResult model constructor.
     * @property {module:radiomanagermodels/TagResult}
     */
    TagResult: TagResult,
    /**
     * The BlockApi service constructor.
     * @property {module:radiomanagerclient/BlockApi}
     */
    BlockApi: BlockApi,
    /**
     * The BroadcastApi service constructor.
     * @property {module:radiomanagerclient/BroadcastApi}
     */
    BroadcastApi: BroadcastApi,
    /**
     * The CampaignApi service constructor.
     * @property {module:radiomanagerclient/CampaignApi}
     */
    CampaignApi: CampaignApi,
    /**
     * The ContactApi service constructor.
     * @property {module:radiomanagerclient/ContactApi}
     */
    ContactApi: ContactApi,
    /**
     * The GenreApi service constructor.
     * @property {module:radiomanagerclient/GenreApi}
     */
    GenreApi: GenreApi,
    /**
     * The ItemApi service constructor.
     * @property {module:radiomanagerclient/ItemApi}
     */
    ItemApi: ItemApi,
    /**
     * The ModelTypeApi service constructor.
     * @property {module:radiomanagerclient/ModelTypeApi}
     */
    ModelTypeApi: ModelTypeApi,
    /**
     * The PresenterApi service constructor.
     * @property {module:radiomanagerclient/PresenterApi}
     */
    PresenterApi: PresenterApi,
    /**
     * The ProgramApi service constructor.
     * @property {module:radiomanagerclient/ProgramApi}
     */
    ProgramApi: ProgramApi,
    /**
     * The StationApi service constructor.
     * @property {module:radiomanagerclient/StationApi}
     */
    StationApi: StationApi,
    /**
     * The StoryApi service constructor.
     * @property {module:radiomanagerclient/StoryApi}
     */
    StoryApi: StoryApi,
    /**
     * The StringApi service constructor.
     * @property {module:radiomanagerclient/StringApi}
     */
    StringApi: StringApi,
    /**
     * The TagApi service constructor.
     * @property {module:radiomanagerclient/TagApi}
     */
    TagApi: TagApi,
    /**
     * The UserApi service constructor.
     * @property {module:radiomanagerclient/UserApi}
     */
    UserApi: UserApi,
    /**
     * The VisualSlideApi service constructor.
     * @property {module:radiomanagerclient/VisualSlideApi}
     */
    VisualSlideApi: VisualSlideApi
  };

  return exports;
}));
