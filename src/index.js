/**
 * RadioManager
 * RadioManager
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@pluxbox.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'models/Block', 'models/BlockRelations', 'models/BlockRelationsBroadcast', 'models/BlockRelationsBroadcastParams', 'models/BlockRelationsItems', 'models/BlockRelationsItemsParams', 'models/BlockRelationsProgram', 'models/BlockResult', 'models/BlockResults', 'models/Broadcast', 'models/BroadcastDataInput', 'models/BroadcastEPGDay', 'models/BroadcastEPGRelations', 'models/BroadcastEPGResult', 'models/BroadcastInputOnly', 'models/BroadcastOutputOnly', 'models/BroadcastRelations', 'models/BroadcastRelationsBlocks', 'models/BroadcastRelationsGenre', 'models/BroadcastRelationsItems', 'models/BroadcastRelationsItemsParams', 'models/BroadcastRelationsModelType', 'models/BroadcastRelationsPresenters', 'models/BroadcastRelationsTags', 'models/BroadcastResult', 'models/BroadcastResults', 'models/Campaign', 'models/CampaignDataInput', 'models/CampaignOutputOnly', 'models/CampaignRelations', 'models/CampaignRelationsItems', 'models/CampaignRelationsItemsParams', 'models/CampaignResult', 'models/CampaignResults', 'models/CampaignTemplateItem', 'models/CampaignTemplateItemAllOf', 'models/Contact', 'models/ContactDataInput', 'models/ContactOutputOnly', 'models/ContactRelations', 'models/ContactRelationsItems', 'models/ContactRelationsTags', 'models/ContactRelationsTagsParams', 'models/ContactResult', 'models/ContactResults', 'models/EPGResults', 'models/Forbidden', 'models/Genre', 'models/GenreOutputOnly', 'models/GenreRelations', 'models/GenreRelationsBroadcasts', 'models/GenreRelationsBroadcastsParams', 'models/GenreRelationsPrograms', 'models/GenreResult', 'models/GenreResults', 'models/ImportItem', 'models/ImportItemAllOf', 'models/InlineObject', 'models/InlineObject1', 'models/InlineObject2', 'models/InlineObject3', 'models/InlineResponse202', 'models/InternalServerError', 'models/InviteUserData', 'models/Item', 'models/ItemAllOf', 'models/ItemDataInput', 'models/ItemInputOnly', 'models/ItemOutputOnly', 'models/ItemRelations', 'models/ItemRelationsBlock', 'models/ItemRelationsCampaign', 'models/ItemRelationsContacts', 'models/ItemRelationsContactsParams', 'models/ItemRelationsProgram', 'models/ItemRelationsTags', 'models/ItemResult', 'models/ItemResults', 'models/ModelType', 'models/ModelTypeOptions', 'models/ModelTypeOutputOnly', 'models/ModelTypeRelations', 'models/ModelTypeRelationsBroadcasts', 'models/ModelTypeRelationsCampaigns', 'models/ModelTypeRelationsCampaignsParams', 'models/ModelTypeRelationsContacts', 'models/ModelTypeRelationsItems', 'models/ModelTypeRelationsPresenters', 'models/ModelTypeRelationsPrograms', 'models/ModelTypeResult', 'models/ModelTypeResults', 'models/NotFound', 'models/PostSuccess', 'models/Presenter', 'models/PresenterDataInput', 'models/PresenterEPGResult', 'models/PresenterOutputOnly', 'models/PresenterRelations', 'models/PresenterRelationsBroadcasts', 'models/PresenterRelationsPrograms', 'models/PresenterRelationsProgramsParams', 'models/PresenterResult', 'models/PresenterResults', 'models/Program', 'models/ProgramDataInput', 'models/ProgramInputOnly', 'models/ProgramInputOnlyAllOf', 'models/ProgramOutputOnly', 'models/ProgramRelations', 'models/ProgramRelationsBlocks', 'models/ProgramRelationsBroadcasts', 'models/ProgramRelationsItems', 'models/ProgramRelationsItemsParams', 'models/ProgramRelationsPresenters', 'models/ProgramRelationsTags', 'models/ProgramResult', 'models/ProgramResults', 'models/ReadOnly', 'models/RelationsPlaceholder', 'models/StationResult', 'models/StationResultStation', 'models/StationResultStationStartDays', 'models/Story', 'models/StoryDataInput', 'models/StoryInputOnly', 'models/StoryInputOnlyAllOf', 'models/StoryOutputOnly', 'models/StoryRelations', 'models/StoryRelationsItems', 'models/StoryRelationsTags', 'models/StoryRelationsTagsParams', 'models/StoryResult', 'models/StoryResults', 'models/Success', 'models/Tag', 'models/TagDataInput', 'models/TagOutputOnly', 'models/TagRelations', 'models/TagRelationsBroadcasts', 'models/TagRelationsBroadcastsParams', 'models/TagRelationsContacts', 'models/TagRelationsItems', 'models/TagRelationsPrograms', 'models/TagResult', 'models/TagResults', 'models/TextString', 'models/TooManyRequests', 'models/UnprocessableEntity', 'models/UserResult', 'models/UserResultRoles', 'models/UserResultSettings', 'models/UserResults', 'models/VisualResult', 'radiomanager/BlockApi', 'radiomanager/BroadcastApi', 'radiomanager/CampaignApi', 'radiomanager/ContactApi', 'radiomanager/GenreApi', 'radiomanager/ItemApi', 'radiomanager/ModelTypeApi', 'radiomanager/PresenterApi', 'radiomanager/ProgramApi', 'radiomanager/StationApi', 'radiomanager/StoryApi', 'radiomanager/StringApi', 'radiomanager/TagApi', 'radiomanager/UserApi', 'radiomanager/VisualSlideApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./models/Block'), require('./models/BlockRelations'), require('./models/BlockRelationsBroadcast'), require('./models/BlockRelationsBroadcastParams'), require('./models/BlockRelationsItems'), require('./models/BlockRelationsItemsParams'), require('./models/BlockRelationsProgram'), require('./models/BlockResult'), require('./models/BlockResults'), require('./models/Broadcast'), require('./models/BroadcastDataInput'), require('./models/BroadcastEPGDay'), require('./models/BroadcastEPGRelations'), require('./models/BroadcastEPGResult'), require('./models/BroadcastInputOnly'), require('./models/BroadcastOutputOnly'), require('./models/BroadcastRelations'), require('./models/BroadcastRelationsBlocks'), require('./models/BroadcastRelationsGenre'), require('./models/BroadcastRelationsItems'), require('./models/BroadcastRelationsItemsParams'), require('./models/BroadcastRelationsModelType'), require('./models/BroadcastRelationsPresenters'), require('./models/BroadcastRelationsTags'), require('./models/BroadcastResult'), require('./models/BroadcastResults'), require('./models/Campaign'), require('./models/CampaignDataInput'), require('./models/CampaignOutputOnly'), require('./models/CampaignRelations'), require('./models/CampaignRelationsItems'), require('./models/CampaignRelationsItemsParams'), require('./models/CampaignResult'), require('./models/CampaignResults'), require('./models/CampaignTemplateItem'), require('./models/CampaignTemplateItemAllOf'), require('./models/Contact'), require('./models/ContactDataInput'), require('./models/ContactOutputOnly'), require('./models/ContactRelations'), require('./models/ContactRelationsItems'), require('./models/ContactRelationsTags'), require('./models/ContactRelationsTagsParams'), require('./models/ContactResult'), require('./models/ContactResults'), require('./models/EPGResults'), require('./models/Forbidden'), require('./models/Genre'), require('./models/GenreOutputOnly'), require('./models/GenreRelations'), require('./models/GenreRelationsBroadcasts'), require('./models/GenreRelationsBroadcastsParams'), require('./models/GenreRelationsPrograms'), require('./models/GenreResult'), require('./models/GenreResults'), require('./models/ImportItem'), require('./models/ImportItemAllOf'), require('./models/InlineObject'), require('./models/InlineObject1'), require('./models/InlineObject2'), require('./models/InlineObject3'), require('./models/InlineResponse202'), require('./models/InternalServerError'), require('./models/InviteUserData'), require('./models/Item'), require('./models/ItemAllOf'), require('./models/ItemDataInput'), require('./models/ItemInputOnly'), require('./models/ItemOutputOnly'), require('./models/ItemRelations'), require('./models/ItemRelationsBlock'), require('./models/ItemRelationsCampaign'), require('./models/ItemRelationsContacts'), require('./models/ItemRelationsContactsParams'), require('./models/ItemRelationsProgram'), require('./models/ItemRelationsTags'), require('./models/ItemResult'), require('./models/ItemResults'), require('./models/ModelType'), require('./models/ModelTypeOptions'), require('./models/ModelTypeOutputOnly'), require('./models/ModelTypeRelations'), require('./models/ModelTypeRelationsBroadcasts'), require('./models/ModelTypeRelationsCampaigns'), require('./models/ModelTypeRelationsCampaignsParams'), require('./models/ModelTypeRelationsContacts'), require('./models/ModelTypeRelationsItems'), require('./models/ModelTypeRelationsPresenters'), require('./models/ModelTypeRelationsPrograms'), require('./models/ModelTypeResult'), require('./models/ModelTypeResults'), require('./models/NotFound'), require('./models/PostSuccess'), require('./models/Presenter'), require('./models/PresenterDataInput'), require('./models/PresenterEPGResult'), require('./models/PresenterOutputOnly'), require('./models/PresenterRelations'), require('./models/PresenterRelationsBroadcasts'), require('./models/PresenterRelationsPrograms'), require('./models/PresenterRelationsProgramsParams'), require('./models/PresenterResult'), require('./models/PresenterResults'), require('./models/Program'), require('./models/ProgramDataInput'), require('./models/ProgramInputOnly'), require('./models/ProgramInputOnlyAllOf'), require('./models/ProgramOutputOnly'), require('./models/ProgramRelations'), require('./models/ProgramRelationsBlocks'), require('./models/ProgramRelationsBroadcasts'), require('./models/ProgramRelationsItems'), require('./models/ProgramRelationsItemsParams'), require('./models/ProgramRelationsPresenters'), require('./models/ProgramRelationsTags'), require('./models/ProgramResult'), require('./models/ProgramResults'), require('./models/ReadOnly'), require('./models/RelationsPlaceholder'), require('./models/StationResult'), require('./models/StationResultStation'), require('./models/StationResultStationStartDays'), require('./models/Story'), require('./models/StoryDataInput'), require('./models/StoryInputOnly'), require('./models/StoryInputOnlyAllOf'), require('./models/StoryOutputOnly'), require('./models/StoryRelations'), require('./models/StoryRelationsItems'), require('./models/StoryRelationsTags'), require('./models/StoryRelationsTagsParams'), require('./models/StoryResult'), require('./models/StoryResults'), require('./models/Success'), require('./models/Tag'), require('./models/TagDataInput'), require('./models/TagOutputOnly'), require('./models/TagRelations'), require('./models/TagRelationsBroadcasts'), require('./models/TagRelationsBroadcastsParams'), require('./models/TagRelationsContacts'), require('./models/TagRelationsItems'), require('./models/TagRelationsPrograms'), require('./models/TagResult'), require('./models/TagResults'), require('./models/TextString'), require('./models/TooManyRequests'), require('./models/UnprocessableEntity'), require('./models/UserResult'), require('./models/UserResultRoles'), require('./models/UserResultSettings'), require('./models/UserResults'), require('./models/VisualResult'), require('./radiomanager/BlockApi'), require('./radiomanager/BroadcastApi'), require('./radiomanager/CampaignApi'), require('./radiomanager/ContactApi'), require('./radiomanager/GenreApi'), require('./radiomanager/ItemApi'), require('./radiomanager/ModelTypeApi'), require('./radiomanager/PresenterApi'), require('./radiomanager/ProgramApi'), require('./radiomanager/StationApi'), require('./radiomanager/StoryApi'), require('./radiomanager/StringApi'), require('./radiomanager/TagApi'), require('./radiomanager/UserApi'), require('./radiomanager/VisualSlideApi'));
  }
}(function(ApiClient, Block, BlockRelations, BlockRelationsBroadcast, BlockRelationsBroadcastParams, BlockRelationsItems, BlockRelationsItemsParams, BlockRelationsProgram, BlockResult, BlockResults, Broadcast, BroadcastDataInput, BroadcastEPGDay, BroadcastEPGRelations, BroadcastEPGResult, BroadcastInputOnly, BroadcastOutputOnly, BroadcastRelations, BroadcastRelationsBlocks, BroadcastRelationsGenre, BroadcastRelationsItems, BroadcastRelationsItemsParams, BroadcastRelationsModelType, BroadcastRelationsPresenters, BroadcastRelationsTags, BroadcastResult, BroadcastResults, Campaign, CampaignDataInput, CampaignOutputOnly, CampaignRelations, CampaignRelationsItems, CampaignRelationsItemsParams, CampaignResult, CampaignResults, CampaignTemplateItem, CampaignTemplateItemAllOf, Contact, ContactDataInput, ContactOutputOnly, ContactRelations, ContactRelationsItems, ContactRelationsTags, ContactRelationsTagsParams, ContactResult, ContactResults, EPGResults, Forbidden, Genre, GenreOutputOnly, GenreRelations, GenreRelationsBroadcasts, GenreRelationsBroadcastsParams, GenreRelationsPrograms, GenreResult, GenreResults, ImportItem, ImportItemAllOf, InlineObject, InlineObject1, InlineObject2, InlineObject3, InlineResponse202, InternalServerError, InviteUserData, Item, ItemAllOf, ItemDataInput, ItemInputOnly, ItemOutputOnly, ItemRelations, ItemRelationsBlock, ItemRelationsCampaign, ItemRelationsContacts, ItemRelationsContactsParams, ItemRelationsProgram, ItemRelationsTags, ItemResult, ItemResults, ModelType, ModelTypeOptions, ModelTypeOutputOnly, ModelTypeRelations, ModelTypeRelationsBroadcasts, ModelTypeRelationsCampaigns, ModelTypeRelationsCampaignsParams, ModelTypeRelationsContacts, ModelTypeRelationsItems, ModelTypeRelationsPresenters, ModelTypeRelationsPrograms, ModelTypeResult, ModelTypeResults, NotFound, PostSuccess, Presenter, PresenterDataInput, PresenterEPGResult, PresenterOutputOnly, PresenterRelations, PresenterRelationsBroadcasts, PresenterRelationsPrograms, PresenterRelationsProgramsParams, PresenterResult, PresenterResults, Program, ProgramDataInput, ProgramInputOnly, ProgramInputOnlyAllOf, ProgramOutputOnly, ProgramRelations, ProgramRelationsBlocks, ProgramRelationsBroadcasts, ProgramRelationsItems, ProgramRelationsItemsParams, ProgramRelationsPresenters, ProgramRelationsTags, ProgramResult, ProgramResults, ReadOnly, RelationsPlaceholder, StationResult, StationResultStation, StationResultStationStartDays, Story, StoryDataInput, StoryInputOnly, StoryInputOnlyAllOf, StoryOutputOnly, StoryRelations, StoryRelationsItems, StoryRelationsTags, StoryRelationsTagsParams, StoryResult, StoryResults, Success, Tag, TagDataInput, TagOutputOnly, TagRelations, TagRelationsBroadcasts, TagRelationsBroadcastsParams, TagRelationsContacts, TagRelationsItems, TagRelationsPrograms, TagResult, TagResults, TextString, TooManyRequests, UnprocessableEntity, UserResult, UserResultRoles, UserResultSettings, UserResults, VisualResult, BlockApi, BroadcastApi, CampaignApi, ContactApi, GenreApi, ItemApi, ModelTypeApi, PresenterApi, ProgramApi, StationApi, StoryApi, StringApi, TagApi, UserApi, VisualSlideApi) {
  'use strict';

  /**
   * RadioManager.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var radiomanager = require('index'); // See note below*.
   * var xxxSvc = new radiomanager.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new radiomanager.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new radiomanager.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new radiomanager.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 2.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Block model constructor.
     * @property {module:models/Block}
     */
    Block: Block,
    /**
     * The BlockRelations model constructor.
     * @property {module:models/BlockRelations}
     */
    BlockRelations: BlockRelations,
    /**
     * The BlockRelationsBroadcast model constructor.
     * @property {module:models/BlockRelationsBroadcast}
     */
    BlockRelationsBroadcast: BlockRelationsBroadcast,
    /**
     * The BlockRelationsBroadcastParams model constructor.
     * @property {module:models/BlockRelationsBroadcastParams}
     */
    BlockRelationsBroadcastParams: BlockRelationsBroadcastParams,
    /**
     * The BlockRelationsItems model constructor.
     * @property {module:models/BlockRelationsItems}
     */
    BlockRelationsItems: BlockRelationsItems,
    /**
     * The BlockRelationsItemsParams model constructor.
     * @property {module:models/BlockRelationsItemsParams}
     */
    BlockRelationsItemsParams: BlockRelationsItemsParams,
    /**
     * The BlockRelationsProgram model constructor.
     * @property {module:models/BlockRelationsProgram}
     */
    BlockRelationsProgram: BlockRelationsProgram,
    /**
     * The BlockResult model constructor.
     * @property {module:models/BlockResult}
     */
    BlockResult: BlockResult,
    /**
     * The BlockResults model constructor.
     * @property {module:models/BlockResults}
     */
    BlockResults: BlockResults,
    /**
     * The Broadcast model constructor.
     * @property {module:models/Broadcast}
     */
    Broadcast: Broadcast,
    /**
     * The BroadcastDataInput model constructor.
     * @property {module:models/BroadcastDataInput}
     */
    BroadcastDataInput: BroadcastDataInput,
    /**
     * The BroadcastEPGDay model constructor.
     * @property {module:models/BroadcastEPGDay}
     */
    BroadcastEPGDay: BroadcastEPGDay,
    /**
     * The BroadcastEPGRelations model constructor.
     * @property {module:models/BroadcastEPGRelations}
     */
    BroadcastEPGRelations: BroadcastEPGRelations,
    /**
     * The BroadcastEPGResult model constructor.
     * @property {module:models/BroadcastEPGResult}
     */
    BroadcastEPGResult: BroadcastEPGResult,
    /**
     * The BroadcastInputOnly model constructor.
     * @property {module:models/BroadcastInputOnly}
     */
    BroadcastInputOnly: BroadcastInputOnly,
    /**
     * The BroadcastOutputOnly model constructor.
     * @property {module:models/BroadcastOutputOnly}
     */
    BroadcastOutputOnly: BroadcastOutputOnly,
    /**
     * The BroadcastRelations model constructor.
     * @property {module:models/BroadcastRelations}
     */
    BroadcastRelations: BroadcastRelations,
    /**
     * The BroadcastRelationsBlocks model constructor.
     * @property {module:models/BroadcastRelationsBlocks}
     */
    BroadcastRelationsBlocks: BroadcastRelationsBlocks,
    /**
     * The BroadcastRelationsGenre model constructor.
     * @property {module:models/BroadcastRelationsGenre}
     */
    BroadcastRelationsGenre: BroadcastRelationsGenre,
    /**
     * The BroadcastRelationsItems model constructor.
     * @property {module:models/BroadcastRelationsItems}
     */
    BroadcastRelationsItems: BroadcastRelationsItems,
    /**
     * The BroadcastRelationsItemsParams model constructor.
     * @property {module:models/BroadcastRelationsItemsParams}
     */
    BroadcastRelationsItemsParams: BroadcastRelationsItemsParams,
    /**
     * The BroadcastRelationsModelType model constructor.
     * @property {module:models/BroadcastRelationsModelType}
     */
    BroadcastRelationsModelType: BroadcastRelationsModelType,
    /**
     * The BroadcastRelationsPresenters model constructor.
     * @property {module:models/BroadcastRelationsPresenters}
     */
    BroadcastRelationsPresenters: BroadcastRelationsPresenters,
    /**
     * The BroadcastRelationsTags model constructor.
     * @property {module:models/BroadcastRelationsTags}
     */
    BroadcastRelationsTags: BroadcastRelationsTags,
    /**
     * The BroadcastResult model constructor.
     * @property {module:models/BroadcastResult}
     */
    BroadcastResult: BroadcastResult,
    /**
     * The BroadcastResults model constructor.
     * @property {module:models/BroadcastResults}
     */
    BroadcastResults: BroadcastResults,
    /**
     * The Campaign model constructor.
     * @property {module:models/Campaign}
     */
    Campaign: Campaign,
    /**
     * The CampaignDataInput model constructor.
     * @property {module:models/CampaignDataInput}
     */
    CampaignDataInput: CampaignDataInput,
    /**
     * The CampaignOutputOnly model constructor.
     * @property {module:models/CampaignOutputOnly}
     */
    CampaignOutputOnly: CampaignOutputOnly,
    /**
     * The CampaignRelations model constructor.
     * @property {module:models/CampaignRelations}
     */
    CampaignRelations: CampaignRelations,
    /**
     * The CampaignRelationsItems model constructor.
     * @property {module:models/CampaignRelationsItems}
     */
    CampaignRelationsItems: CampaignRelationsItems,
    /**
     * The CampaignRelationsItemsParams model constructor.
     * @property {module:models/CampaignRelationsItemsParams}
     */
    CampaignRelationsItemsParams: CampaignRelationsItemsParams,
    /**
     * The CampaignResult model constructor.
     * @property {module:models/CampaignResult}
     */
    CampaignResult: CampaignResult,
    /**
     * The CampaignResults model constructor.
     * @property {module:models/CampaignResults}
     */
    CampaignResults: CampaignResults,
    /**
     * The CampaignTemplateItem model constructor.
     * @property {module:models/CampaignTemplateItem}
     */
    CampaignTemplateItem: CampaignTemplateItem,
    /**
     * The CampaignTemplateItemAllOf model constructor.
     * @property {module:models/CampaignTemplateItemAllOf}
     */
    CampaignTemplateItemAllOf: CampaignTemplateItemAllOf,
    /**
     * The Contact model constructor.
     * @property {module:models/Contact}
     */
    Contact: Contact,
    /**
     * The ContactDataInput model constructor.
     * @property {module:models/ContactDataInput}
     */
    ContactDataInput: ContactDataInput,
    /**
     * The ContactOutputOnly model constructor.
     * @property {module:models/ContactOutputOnly}
     */
    ContactOutputOnly: ContactOutputOnly,
    /**
     * The ContactRelations model constructor.
     * @property {module:models/ContactRelations}
     */
    ContactRelations: ContactRelations,
    /**
     * The ContactRelationsItems model constructor.
     * @property {module:models/ContactRelationsItems}
     */
    ContactRelationsItems: ContactRelationsItems,
    /**
     * The ContactRelationsTags model constructor.
     * @property {module:models/ContactRelationsTags}
     */
    ContactRelationsTags: ContactRelationsTags,
    /**
     * The ContactRelationsTagsParams model constructor.
     * @property {module:models/ContactRelationsTagsParams}
     */
    ContactRelationsTagsParams: ContactRelationsTagsParams,
    /**
     * The ContactResult model constructor.
     * @property {module:models/ContactResult}
     */
    ContactResult: ContactResult,
    /**
     * The ContactResults model constructor.
     * @property {module:models/ContactResults}
     */
    ContactResults: ContactResults,
    /**
     * The EPGResults model constructor.
     * @property {module:models/EPGResults}
     */
    EPGResults: EPGResults,
    /**
     * The Forbidden model constructor.
     * @property {module:models/Forbidden}
     */
    Forbidden: Forbidden,
    /**
     * The Genre model constructor.
     * @property {module:models/Genre}
     */
    Genre: Genre,
    /**
     * The GenreOutputOnly model constructor.
     * @property {module:models/GenreOutputOnly}
     */
    GenreOutputOnly: GenreOutputOnly,
    /**
     * The GenreRelations model constructor.
     * @property {module:models/GenreRelations}
     */
    GenreRelations: GenreRelations,
    /**
     * The GenreRelationsBroadcasts model constructor.
     * @property {module:models/GenreRelationsBroadcasts}
     */
    GenreRelationsBroadcasts: GenreRelationsBroadcasts,
    /**
     * The GenreRelationsBroadcastsParams model constructor.
     * @property {module:models/GenreRelationsBroadcastsParams}
     */
    GenreRelationsBroadcastsParams: GenreRelationsBroadcastsParams,
    /**
     * The GenreRelationsPrograms model constructor.
     * @property {module:models/GenreRelationsPrograms}
     */
    GenreRelationsPrograms: GenreRelationsPrograms,
    /**
     * The GenreResult model constructor.
     * @property {module:models/GenreResult}
     */
    GenreResult: GenreResult,
    /**
     * The GenreResults model constructor.
     * @property {module:models/GenreResults}
     */
    GenreResults: GenreResults,
    /**
     * The ImportItem model constructor.
     * @property {module:models/ImportItem}
     */
    ImportItem: ImportItem,
    /**
     * The ImportItemAllOf model constructor.
     * @property {module:models/ImportItemAllOf}
     */
    ImportItemAllOf: ImportItemAllOf,
    /**
     * The InlineObject model constructor.
     * @property {module:models/InlineObject}
     */
    InlineObject: InlineObject,
    /**
     * The InlineObject1 model constructor.
     * @property {module:models/InlineObject1}
     */
    InlineObject1: InlineObject1,
    /**
     * The InlineObject2 model constructor.
     * @property {module:models/InlineObject2}
     */
    InlineObject2: InlineObject2,
    /**
     * The InlineObject3 model constructor.
     * @property {module:models/InlineObject3}
     */
    InlineObject3: InlineObject3,
    /**
     * The InlineResponse202 model constructor.
     * @property {module:models/InlineResponse202}
     */
    InlineResponse202: InlineResponse202,
    /**
     * The InternalServerError model constructor.
     * @property {module:models/InternalServerError}
     */
    InternalServerError: InternalServerError,
    /**
     * The InviteUserData model constructor.
     * @property {module:models/InviteUserData}
     */
    InviteUserData: InviteUserData,
    /**
     * The Item model constructor.
     * @property {module:models/Item}
     */
    Item: Item,
    /**
     * The ItemAllOf model constructor.
     * @property {module:models/ItemAllOf}
     */
    ItemAllOf: ItemAllOf,
    /**
     * The ItemDataInput model constructor.
     * @property {module:models/ItemDataInput}
     */
    ItemDataInput: ItemDataInput,
    /**
     * The ItemInputOnly model constructor.
     * @property {module:models/ItemInputOnly}
     */
    ItemInputOnly: ItemInputOnly,
    /**
     * The ItemOutputOnly model constructor.
     * @property {module:models/ItemOutputOnly}
     */
    ItemOutputOnly: ItemOutputOnly,
    /**
     * The ItemRelations model constructor.
     * @property {module:models/ItemRelations}
     */
    ItemRelations: ItemRelations,
    /**
     * The ItemRelationsBlock model constructor.
     * @property {module:models/ItemRelationsBlock}
     */
    ItemRelationsBlock: ItemRelationsBlock,
    /**
     * The ItemRelationsCampaign model constructor.
     * @property {module:models/ItemRelationsCampaign}
     */
    ItemRelationsCampaign: ItemRelationsCampaign,
    /**
     * The ItemRelationsContacts model constructor.
     * @property {module:models/ItemRelationsContacts}
     */
    ItemRelationsContacts: ItemRelationsContacts,
    /**
     * The ItemRelationsContactsParams model constructor.
     * @property {module:models/ItemRelationsContactsParams}
     */
    ItemRelationsContactsParams: ItemRelationsContactsParams,
    /**
     * The ItemRelationsProgram model constructor.
     * @property {module:models/ItemRelationsProgram}
     */
    ItemRelationsProgram: ItemRelationsProgram,
    /**
     * The ItemRelationsTags model constructor.
     * @property {module:models/ItemRelationsTags}
     */
    ItemRelationsTags: ItemRelationsTags,
    /**
     * The ItemResult model constructor.
     * @property {module:models/ItemResult}
     */
    ItemResult: ItemResult,
    /**
     * The ItemResults model constructor.
     * @property {module:models/ItemResults}
     */
    ItemResults: ItemResults,
    /**
     * The ModelType model constructor.
     * @property {module:models/ModelType}
     */
    ModelType: ModelType,
    /**
     * The ModelTypeOptions model constructor.
     * @property {module:models/ModelTypeOptions}
     */
    ModelTypeOptions: ModelTypeOptions,
    /**
     * The ModelTypeOutputOnly model constructor.
     * @property {module:models/ModelTypeOutputOnly}
     */
    ModelTypeOutputOnly: ModelTypeOutputOnly,
    /**
     * The ModelTypeRelations model constructor.
     * @property {module:models/ModelTypeRelations}
     */
    ModelTypeRelations: ModelTypeRelations,
    /**
     * The ModelTypeRelationsBroadcasts model constructor.
     * @property {module:models/ModelTypeRelationsBroadcasts}
     */
    ModelTypeRelationsBroadcasts: ModelTypeRelationsBroadcasts,
    /**
     * The ModelTypeRelationsCampaigns model constructor.
     * @property {module:models/ModelTypeRelationsCampaigns}
     */
    ModelTypeRelationsCampaigns: ModelTypeRelationsCampaigns,
    /**
     * The ModelTypeRelationsCampaignsParams model constructor.
     * @property {module:models/ModelTypeRelationsCampaignsParams}
     */
    ModelTypeRelationsCampaignsParams: ModelTypeRelationsCampaignsParams,
    /**
     * The ModelTypeRelationsContacts model constructor.
     * @property {module:models/ModelTypeRelationsContacts}
     */
    ModelTypeRelationsContacts: ModelTypeRelationsContacts,
    /**
     * The ModelTypeRelationsItems model constructor.
     * @property {module:models/ModelTypeRelationsItems}
     */
    ModelTypeRelationsItems: ModelTypeRelationsItems,
    /**
     * The ModelTypeRelationsPresenters model constructor.
     * @property {module:models/ModelTypeRelationsPresenters}
     */
    ModelTypeRelationsPresenters: ModelTypeRelationsPresenters,
    /**
     * The ModelTypeRelationsPrograms model constructor.
     * @property {module:models/ModelTypeRelationsPrograms}
     */
    ModelTypeRelationsPrograms: ModelTypeRelationsPrograms,
    /**
     * The ModelTypeResult model constructor.
     * @property {module:models/ModelTypeResult}
     */
    ModelTypeResult: ModelTypeResult,
    /**
     * The ModelTypeResults model constructor.
     * @property {module:models/ModelTypeResults}
     */
    ModelTypeResults: ModelTypeResults,
    /**
     * The NotFound model constructor.
     * @property {module:models/NotFound}
     */
    NotFound: NotFound,
    /**
     * The PostSuccess model constructor.
     * @property {module:models/PostSuccess}
     */
    PostSuccess: PostSuccess,
    /**
     * The Presenter model constructor.
     * @property {module:models/Presenter}
     */
    Presenter: Presenter,
    /**
     * The PresenterDataInput model constructor.
     * @property {module:models/PresenterDataInput}
     */
    PresenterDataInput: PresenterDataInput,
    /**
     * The PresenterEPGResult model constructor.
     * @property {module:models/PresenterEPGResult}
     */
    PresenterEPGResult: PresenterEPGResult,
    /**
     * The PresenterOutputOnly model constructor.
     * @property {module:models/PresenterOutputOnly}
     */
    PresenterOutputOnly: PresenterOutputOnly,
    /**
     * The PresenterRelations model constructor.
     * @property {module:models/PresenterRelations}
     */
    PresenterRelations: PresenterRelations,
    /**
     * The PresenterRelationsBroadcasts model constructor.
     * @property {module:models/PresenterRelationsBroadcasts}
     */
    PresenterRelationsBroadcasts: PresenterRelationsBroadcasts,
    /**
     * The PresenterRelationsPrograms model constructor.
     * @property {module:models/PresenterRelationsPrograms}
     */
    PresenterRelationsPrograms: PresenterRelationsPrograms,
    /**
     * The PresenterRelationsProgramsParams model constructor.
     * @property {module:models/PresenterRelationsProgramsParams}
     */
    PresenterRelationsProgramsParams: PresenterRelationsProgramsParams,
    /**
     * The PresenterResult model constructor.
     * @property {module:models/PresenterResult}
     */
    PresenterResult: PresenterResult,
    /**
     * The PresenterResults model constructor.
     * @property {module:models/PresenterResults}
     */
    PresenterResults: PresenterResults,
    /**
     * The Program model constructor.
     * @property {module:models/Program}
     */
    Program: Program,
    /**
     * The ProgramDataInput model constructor.
     * @property {module:models/ProgramDataInput}
     */
    ProgramDataInput: ProgramDataInput,
    /**
     * The ProgramInputOnly model constructor.
     * @property {module:models/ProgramInputOnly}
     */
    ProgramInputOnly: ProgramInputOnly,
    /**
     * The ProgramInputOnlyAllOf model constructor.
     * @property {module:models/ProgramInputOnlyAllOf}
     */
    ProgramInputOnlyAllOf: ProgramInputOnlyAllOf,
    /**
     * The ProgramOutputOnly model constructor.
     * @property {module:models/ProgramOutputOnly}
     */
    ProgramOutputOnly: ProgramOutputOnly,
    /**
     * The ProgramRelations model constructor.
     * @property {module:models/ProgramRelations}
     */
    ProgramRelations: ProgramRelations,
    /**
     * The ProgramRelationsBlocks model constructor.
     * @property {module:models/ProgramRelationsBlocks}
     */
    ProgramRelationsBlocks: ProgramRelationsBlocks,
    /**
     * The ProgramRelationsBroadcasts model constructor.
     * @property {module:models/ProgramRelationsBroadcasts}
     */
    ProgramRelationsBroadcasts: ProgramRelationsBroadcasts,
    /**
     * The ProgramRelationsItems model constructor.
     * @property {module:models/ProgramRelationsItems}
     */
    ProgramRelationsItems: ProgramRelationsItems,
    /**
     * The ProgramRelationsItemsParams model constructor.
     * @property {module:models/ProgramRelationsItemsParams}
     */
    ProgramRelationsItemsParams: ProgramRelationsItemsParams,
    /**
     * The ProgramRelationsPresenters model constructor.
     * @property {module:models/ProgramRelationsPresenters}
     */
    ProgramRelationsPresenters: ProgramRelationsPresenters,
    /**
     * The ProgramRelationsTags model constructor.
     * @property {module:models/ProgramRelationsTags}
     */
    ProgramRelationsTags: ProgramRelationsTags,
    /**
     * The ProgramResult model constructor.
     * @property {module:models/ProgramResult}
     */
    ProgramResult: ProgramResult,
    /**
     * The ProgramResults model constructor.
     * @property {module:models/ProgramResults}
     */
    ProgramResults: ProgramResults,
    /**
     * The ReadOnly model constructor.
     * @property {module:models/ReadOnly}
     */
    ReadOnly: ReadOnly,
    /**
     * The RelationsPlaceholder model constructor.
     * @property {module:models/RelationsPlaceholder}
     */
    RelationsPlaceholder: RelationsPlaceholder,
    /**
     * The StationResult model constructor.
     * @property {module:models/StationResult}
     */
    StationResult: StationResult,
    /**
     * The StationResultStation model constructor.
     * @property {module:models/StationResultStation}
     */
    StationResultStation: StationResultStation,
    /**
     * The StationResultStationStartDays model constructor.
     * @property {module:models/StationResultStationStartDays}
     */
    StationResultStationStartDays: StationResultStationStartDays,
    /**
     * The Story model constructor.
     * @property {module:models/Story}
     */
    Story: Story,
    /**
     * The StoryDataInput model constructor.
     * @property {module:models/StoryDataInput}
     */
    StoryDataInput: StoryDataInput,
    /**
     * The StoryInputOnly model constructor.
     * @property {module:models/StoryInputOnly}
     */
    StoryInputOnly: StoryInputOnly,
    /**
     * The StoryInputOnlyAllOf model constructor.
     * @property {module:models/StoryInputOnlyAllOf}
     */
    StoryInputOnlyAllOf: StoryInputOnlyAllOf,
    /**
     * The StoryOutputOnly model constructor.
     * @property {module:models/StoryOutputOnly}
     */
    StoryOutputOnly: StoryOutputOnly,
    /**
     * The StoryRelations model constructor.
     * @property {module:models/StoryRelations}
     */
    StoryRelations: StoryRelations,
    /**
     * The StoryRelationsItems model constructor.
     * @property {module:models/StoryRelationsItems}
     */
    StoryRelationsItems: StoryRelationsItems,
    /**
     * The StoryRelationsTags model constructor.
     * @property {module:models/StoryRelationsTags}
     */
    StoryRelationsTags: StoryRelationsTags,
    /**
     * The StoryRelationsTagsParams model constructor.
     * @property {module:models/StoryRelationsTagsParams}
     */
    StoryRelationsTagsParams: StoryRelationsTagsParams,
    /**
     * The StoryResult model constructor.
     * @property {module:models/StoryResult}
     */
    StoryResult: StoryResult,
    /**
     * The StoryResults model constructor.
     * @property {module:models/StoryResults}
     */
    StoryResults: StoryResults,
    /**
     * The Success model constructor.
     * @property {module:models/Success}
     */
    Success: Success,
    /**
     * The Tag model constructor.
     * @property {module:models/Tag}
     */
    Tag: Tag,
    /**
     * The TagDataInput model constructor.
     * @property {module:models/TagDataInput}
     */
    TagDataInput: TagDataInput,
    /**
     * The TagOutputOnly model constructor.
     * @property {module:models/TagOutputOnly}
     */
    TagOutputOnly: TagOutputOnly,
    /**
     * The TagRelations model constructor.
     * @property {module:models/TagRelations}
     */
    TagRelations: TagRelations,
    /**
     * The TagRelationsBroadcasts model constructor.
     * @property {module:models/TagRelationsBroadcasts}
     */
    TagRelationsBroadcasts: TagRelationsBroadcasts,
    /**
     * The TagRelationsBroadcastsParams model constructor.
     * @property {module:models/TagRelationsBroadcastsParams}
     */
    TagRelationsBroadcastsParams: TagRelationsBroadcastsParams,
    /**
     * The TagRelationsContacts model constructor.
     * @property {module:models/TagRelationsContacts}
     */
    TagRelationsContacts: TagRelationsContacts,
    /**
     * The TagRelationsItems model constructor.
     * @property {module:models/TagRelationsItems}
     */
    TagRelationsItems: TagRelationsItems,
    /**
     * The TagRelationsPrograms model constructor.
     * @property {module:models/TagRelationsPrograms}
     */
    TagRelationsPrograms: TagRelationsPrograms,
    /**
     * The TagResult model constructor.
     * @property {module:models/TagResult}
     */
    TagResult: TagResult,
    /**
     * The TagResults model constructor.
     * @property {module:models/TagResults}
     */
    TagResults: TagResults,
    /**
     * The TextString model constructor.
     * @property {module:models/TextString}
     */
    TextString: TextString,
    /**
     * The TooManyRequests model constructor.
     * @property {module:models/TooManyRequests}
     */
    TooManyRequests: TooManyRequests,
    /**
     * The UnprocessableEntity model constructor.
     * @property {module:models/UnprocessableEntity}
     */
    UnprocessableEntity: UnprocessableEntity,
    /**
     * The UserResult model constructor.
     * @property {module:models/UserResult}
     */
    UserResult: UserResult,
    /**
     * The UserResultRoles model constructor.
     * @property {module:models/UserResultRoles}
     */
    UserResultRoles: UserResultRoles,
    /**
     * The UserResultSettings model constructor.
     * @property {module:models/UserResultSettings}
     */
    UserResultSettings: UserResultSettings,
    /**
     * The UserResults model constructor.
     * @property {module:models/UserResults}
     */
    UserResults: UserResults,
    /**
     * The VisualResult model constructor.
     * @property {module:models/VisualResult}
     */
    VisualResult: VisualResult,
    /**
     * The BlockApi service constructor.
     * @property {module:radiomanager/BlockApi}
     */
    BlockApi: BlockApi,
    /**
     * The BroadcastApi service constructor.
     * @property {module:radiomanager/BroadcastApi}
     */
    BroadcastApi: BroadcastApi,
    /**
     * The CampaignApi service constructor.
     * @property {module:radiomanager/CampaignApi}
     */
    CampaignApi: CampaignApi,
    /**
     * The ContactApi service constructor.
     * @property {module:radiomanager/ContactApi}
     */
    ContactApi: ContactApi,
    /**
     * The GenreApi service constructor.
     * @property {module:radiomanager/GenreApi}
     */
    GenreApi: GenreApi,
    /**
     * The ItemApi service constructor.
     * @property {module:radiomanager/ItemApi}
     */
    ItemApi: ItemApi,
    /**
     * The ModelTypeApi service constructor.
     * @property {module:radiomanager/ModelTypeApi}
     */
    ModelTypeApi: ModelTypeApi,
    /**
     * The PresenterApi service constructor.
     * @property {module:radiomanager/PresenterApi}
     */
    PresenterApi: PresenterApi,
    /**
     * The ProgramApi service constructor.
     * @property {module:radiomanager/ProgramApi}
     */
    ProgramApi: ProgramApi,
    /**
     * The StationApi service constructor.
     * @property {module:radiomanager/StationApi}
     */
    StationApi: StationApi,
    /**
     * The StoryApi service constructor.
     * @property {module:radiomanager/StoryApi}
     */
    StoryApi: StoryApi,
    /**
     * The StringApi service constructor.
     * @property {module:radiomanager/StringApi}
     */
    StringApi: StringApi,
    /**
     * The TagApi service constructor.
     * @property {module:radiomanager/TagApi}
     */
    TagApi: TagApi,
    /**
     * The UserApi service constructor.
     * @property {module:radiomanager/UserApi}
     */
    UserApi: UserApi,
    /**
     * The VisualSlideApi service constructor.
     * @property {module:radiomanager/VisualSlideApi}
     */
    VisualSlideApi: VisualSlideApi
  };

  return exports;
}));
