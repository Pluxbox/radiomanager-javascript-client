/**
 * RadioManager
 * This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@pluxbox.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BlockRelationsProgram from './BlockRelationsProgram';
import BroadcastRelationsBlocks from './BroadcastRelationsBlocks';
import BroadcastRelationsGenre from './BroadcastRelationsGenre';
import BroadcastRelationsGroup from './BroadcastRelationsGroup';
import BroadcastRelationsItems from './BroadcastRelationsItems';
import BroadcastRelationsModelType from './BroadcastRelationsModelType';
import BroadcastRelationsPresenters from './BroadcastRelationsPresenters';
import BroadcastRelationsTags from './BroadcastRelationsTags';

/**
 * The BroadcastRelations model module.
 * @module models/BroadcastRelations
 * @version 2.0
 */
class BroadcastRelations {
    /**
     * Constructs a new <code>BroadcastRelations</code>.
     * @alias module:models/BroadcastRelations
     */
    constructor() { 
        
        BroadcastRelations.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BroadcastRelations</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/BroadcastRelations} obj Optional instance to populate.
     * @return {module:models/BroadcastRelations} The populated <code>BroadcastRelations</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BroadcastRelations();

            if (data.hasOwnProperty('genre')) {
                obj['genre'] = BroadcastRelationsGenre.constructFromObject(data['genre']);
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = BroadcastRelationsItems.constructFromObject(data['items']);
            }
            if (data.hasOwnProperty('blocks')) {
                obj['blocks'] = BroadcastRelationsBlocks.constructFromObject(data['blocks']);
            }
            if (data.hasOwnProperty('program')) {
                obj['program'] = BlockRelationsProgram.constructFromObject(data['program']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = BroadcastRelationsTags.constructFromObject(data['tags']);
            }
            if (data.hasOwnProperty('presenters')) {
                obj['presenters'] = BroadcastRelationsPresenters.constructFromObject(data['presenters']);
            }
            if (data.hasOwnProperty('model_type')) {
                obj['model_type'] = BroadcastRelationsModelType.constructFromObject(data['model_type']);
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = BroadcastRelationsGroup.constructFromObject(data['group']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BroadcastRelations</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BroadcastRelations</code>.
     */
    static validateJSON(data) {
        // validate the optional field `genre`
        if (data['genre']) { // data not null
          BroadcastRelationsGenre.validateJSON(data['genre']);
        }
        // validate the optional field `items`
        if (data['items']) { // data not null
          BroadcastRelationsItems.validateJSON(data['items']);
        }
        // validate the optional field `blocks`
        if (data['blocks']) { // data not null
          BroadcastRelationsBlocks.validateJSON(data['blocks']);
        }
        // validate the optional field `program`
        if (data['program']) { // data not null
          BlockRelationsProgram.validateJSON(data['program']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          BroadcastRelationsTags.validateJSON(data['tags']);
        }
        // validate the optional field `presenters`
        if (data['presenters']) { // data not null
          BroadcastRelationsPresenters.validateJSON(data['presenters']);
        }
        // validate the optional field `model_type`
        if (data['model_type']) { // data not null
          BroadcastRelationsModelType.validateJSON(data['model_type']);
        }
        // validate the optional field `group`
        if (data['group']) { // data not null
          BroadcastRelationsGroup.validateJSON(data['group']);
        }

        return true;
    }

/**
     * @return {module:models/BroadcastRelationsGenre}
     */
    getGenre() {
        return this.genre;
    }

    /**
     * @param {module:models/BroadcastRelationsGenre} genre
     */
    setGenre(genre) {
        this['genre'] = genre;
    }
/**
     * @return {module:models/BroadcastRelationsItems}
     */
    getItems() {
        return this.items;
    }

    /**
     * @param {module:models/BroadcastRelationsItems} items
     */
    setItems(items) {
        this['items'] = items;
    }
/**
     * @return {module:models/BroadcastRelationsBlocks}
     */
    getBlocks() {
        return this.blocks;
    }

    /**
     * @param {module:models/BroadcastRelationsBlocks} blocks
     */
    setBlocks(blocks) {
        this['blocks'] = blocks;
    }
/**
     * @return {module:models/BlockRelationsProgram}
     */
    getProgram() {
        return this.program;
    }

    /**
     * @param {module:models/BlockRelationsProgram} program
     */
    setProgram(program) {
        this['program'] = program;
    }
/**
     * @return {module:models/BroadcastRelationsTags}
     */
    getTags() {
        return this.tags;
    }

    /**
     * @param {module:models/BroadcastRelationsTags} tags
     */
    setTags(tags) {
        this['tags'] = tags;
    }
/**
     * @return {module:models/BroadcastRelationsPresenters}
     */
    getPresenters() {
        return this.presenters;
    }

    /**
     * @param {module:models/BroadcastRelationsPresenters} presenters
     */
    setPresenters(presenters) {
        this['presenters'] = presenters;
    }
/**
     * @return {module:models/BroadcastRelationsModelType}
     */
    getModelType() {
        return this.model_type;
    }

    /**
     * @param {module:models/BroadcastRelationsModelType} modelType
     */
    setModelType(modelType) {
        this['model_type'] = modelType;
    }
/**
     * @return {module:models/BroadcastRelationsGroup}
     */
    getGroup() {
        return this.group;
    }

    /**
     * @param {module:models/BroadcastRelationsGroup} group
     */
    setGroup(group) {
        this['group'] = group;
    }

}



/**
 * @member {module:models/BroadcastRelationsGenre} genre
 */
BroadcastRelations.prototype['genre'] = undefined;

/**
 * @member {module:models/BroadcastRelationsItems} items
 */
BroadcastRelations.prototype['items'] = undefined;

/**
 * @member {module:models/BroadcastRelationsBlocks} blocks
 */
BroadcastRelations.prototype['blocks'] = undefined;

/**
 * @member {module:models/BlockRelationsProgram} program
 */
BroadcastRelations.prototype['program'] = undefined;

/**
 * @member {module:models/BroadcastRelationsTags} tags
 */
BroadcastRelations.prototype['tags'] = undefined;

/**
 * @member {module:models/BroadcastRelationsPresenters} presenters
 */
BroadcastRelations.prototype['presenters'] = undefined;

/**
 * @member {module:models/BroadcastRelationsModelType} model_type
 */
BroadcastRelations.prototype['model_type'] = undefined;

/**
 * @member {module:models/BroadcastRelationsGroup} group
 */
BroadcastRelations.prototype['group'] = undefined;






export default BroadcastRelations;

