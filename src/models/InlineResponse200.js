/**
 * RadioManager
 * This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@pluxbox.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BlockResult from './BlockResult';

/**
 * The InlineResponse200 model module.
 * @module models/InlineResponse200
 * @version 2.0
 */
class InlineResponse200 {
    /**
     * Constructs a new <code>InlineResponse200</code>.
     * @alias module:models/InlineResponse200
     */
    constructor() { 
        
        InlineResponse200.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse200</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/InlineResponse200} obj Optional instance to populate.
     * @return {module:models/InlineResponse200} The populated <code>InlineResponse200</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse200();

            if (data.hasOwnProperty('current_page')) {
                obj['current_page'] = ApiClient.convertToType(data['current_page'], 'Number');
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'Number');
            }
            if (data.hasOwnProperty('last_page')) {
                obj['last_page'] = ApiClient.convertToType(data['last_page'], 'Number');
            }
            if (data.hasOwnProperty('next_page_url')) {
                obj['next_page_url'] = ApiClient.convertToType(data['next_page_url'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('per_page')) {
                obj['per_page'] = ApiClient.convertToType(data['per_page'], 'Number');
            }
            if (data.hasOwnProperty('prev_page_url')) {
                obj['prev_page_url'] = ApiClient.convertToType(data['prev_page_url'], 'String');
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'Number');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
            if (data.hasOwnProperty('results')) {
                obj['results'] = ApiClient.convertToType(data['results'], [BlockResult]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InlineResponse200</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InlineResponse200</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['next_page_url'] && !(typeof data['next_page_url'] === 'string' || data['next_page_url'] instanceof String)) {
            throw new Error("Expected the field `next_page_url` to be a primitive type in the JSON string but got " + data['next_page_url']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['prev_page_url'] && !(typeof data['prev_page_url'] === 'string' || data['prev_page_url'] instanceof String)) {
            throw new Error("Expected the field `prev_page_url` to be a primitive type in the JSON string but got " + data['prev_page_url']);
        }
        if (data['results']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['results'])) {
                throw new Error("Expected the field `results` to be an array in the JSON data but got " + data['results']);
            }
            // validate the optional field `results` (array)
            for (const item of data['results']) {
                BlockResult.validateJsonObject(item);
            };
        }

        return true;
    }

/**
     * @return {Number}
     */
    getCurrentPage() {
        return this.current_page;
    }

    /**
     * @param {Number} currentPage
     */
    setCurrentPage(currentPage) {
        this['current_page'] = currentPage;
    }
/**
     * @return {Number}
     */
    getFrom() {
        return this.from;
    }

    /**
     * @param {Number} from
     */
    setFrom(from) {
        this['from'] = from;
    }
/**
     * @return {Number}
     */
    getLastPage() {
        return this.last_page;
    }

    /**
     * @param {Number} lastPage
     */
    setLastPage(lastPage) {
        this['last_page'] = lastPage;
    }
/**
     * @return {String}
     */
    getNextPageUrl() {
        return this.next_page_url;
    }

    /**
     * @param {String} nextPageUrl
     */
    setNextPageUrl(nextPageUrl) {
        this['next_page_url'] = nextPageUrl;
    }
/**
     * @return {String}
     */
    getPath() {
        return this.path;
    }

    /**
     * @param {String} path
     */
    setPath(path) {
        this['path'] = path;
    }
/**
     * @return {Number}
     */
    getPerPage() {
        return this.per_page;
    }

    /**
     * @param {Number} perPage
     */
    setPerPage(perPage) {
        this['per_page'] = perPage;
    }
/**
     * @return {String}
     */
    getPrevPageUrl() {
        return this.prev_page_url;
    }

    /**
     * @param {String} prevPageUrl
     */
    setPrevPageUrl(prevPageUrl) {
        this['prev_page_url'] = prevPageUrl;
    }
/**
     * @return {Number}
     */
    getTo() {
        return this.to;
    }

    /**
     * @param {Number} to
     */
    setTo(to) {
        this['to'] = to;
    }
/**
     * @return {Number}
     */
    getTotal() {
        return this.total;
    }

    /**
     * @param {Number} total
     */
    setTotal(total) {
        this['total'] = total;
    }
/**
     * @return {Array.<module:models/BlockResult>}
     */
    getResults() {
        return this.results;
    }

    /**
     * @param {Array.<module:models/BlockResult>} results
     */
    setResults(results) {
        this['results'] = results;
    }

}



/**
 * @member {Number} current_page
 */
InlineResponse200.prototype['current_page'] = undefined;

/**
 * @member {Number} from
 */
InlineResponse200.prototype['from'] = undefined;

/**
 * @member {Number} last_page
 */
InlineResponse200.prototype['last_page'] = undefined;

/**
 * @member {String} next_page_url
 */
InlineResponse200.prototype['next_page_url'] = undefined;

/**
 * @member {String} path
 */
InlineResponse200.prototype['path'] = undefined;

/**
 * @member {Number} per_page
 */
InlineResponse200.prototype['per_page'] = undefined;

/**
 * @member {String} prev_page_url
 */
InlineResponse200.prototype['prev_page_url'] = undefined;

/**
 * @member {Number} to
 */
InlineResponse200.prototype['to'] = undefined;

/**
 * @member {Number} total
 */
InlineResponse200.prototype['total'] = undefined;

/**
 * @member {Array.<module:models/BlockResult>} results
 */
InlineResponse200.prototype['results'] = undefined;






export default InlineResponse200;

