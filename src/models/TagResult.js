/**
 * RadioManager
 * This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@pluxbox.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Tag from './Tag';
import TagOutputOnly from './TagOutputOnly';
import TagRelations from './TagRelations';
import TagRelationsBroadcasts from './TagRelationsBroadcasts';
import TagRelationsContacts from './TagRelationsContacts';
import TagRelationsItems from './TagRelationsItems';
import TagRelationsPrograms from './TagRelationsPrograms';

/**
 * The TagResult model module.
 * @module models/TagResult
 * @version 2.0
 */
class TagResult {
    /**
     * Constructs a new <code>TagResult</code>.
     * @alias module:models/TagResult
     * @implements module:models/TagOutputOnly
     * @implements module:models/Tag
     * @implements module:models/TagRelations
     * @param id {Number} 
     * @param name {String} 
     */
    constructor(id, name) { 
        TagOutputOnly.initialize(this, id);Tag.initialize(this, name);TagRelations.initialize(this);
        TagResult.initialize(this, id, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, name) { 
        obj['id'] = id;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>TagResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/TagResult} obj Optional instance to populate.
     * @return {module:models/TagResult} The populated <code>TagResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TagResult();
            TagOutputOnly.constructFromObject(data, obj);
            Tag.constructFromObject(data, obj);
            TagRelations.constructFromObject(data, obj);

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('deleted_at')) {
                obj['deleted_at'] = ApiClient.convertToType(data['deleted_at'], 'Date');
            }
            if (data.hasOwnProperty('_external_station_id')) {
                obj['_external_station_id'] = ApiClient.convertToType(data['_external_station_id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('broadcasts')) {
                obj['broadcasts'] = TagRelationsBroadcasts.constructFromObject(data['broadcasts']);
            }
            if (data.hasOwnProperty('programs')) {
                obj['programs'] = TagRelationsPrograms.constructFromObject(data['programs']);
            }
            if (data.hasOwnProperty('contacts')) {
                obj['contacts'] = TagRelationsContacts.constructFromObject(data['contacts']);
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = TagRelationsItems.constructFromObject(data['items']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TagResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TagResult</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TagResult.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `broadcasts`
        if (data['broadcasts']) { // data not null
          TagRelationsBroadcasts.validateJSON(data['broadcasts']);
        }
        // validate the optional field `programs`
        if (data['programs']) { // data not null
          TagRelationsPrograms.validateJSON(data['programs']);
        }
        // validate the optional field `contacts`
        if (data['contacts']) { // data not null
          TagRelationsContacts.validateJSON(data['contacts']);
        }
        // validate the optional field `items`
        if (data['items']) { // data not null
          TagRelationsItems.validateJSON(data['items']);
        }

        return true;
    }

/**
     * @return {Number}
     */
    getId() {
        return this.id;
    }

    /**
     * @param {Number} id
     */
    setId(id) {
        this['id'] = id;
    }
/**
     * @return {Date}
     */
    getCreatedAt() {
        return this.created_at;
    }

    /**
     * @param {Date} createdAt
     */
    setCreatedAt(createdAt) {
        this['created_at'] = createdAt;
    }
/**
     * @return {Date}
     */
    getUpdatedAt() {
        return this.updated_at;
    }

    /**
     * @param {Date} updatedAt
     */
    setUpdatedAt(updatedAt) {
        this['updated_at'] = updatedAt;
    }
/**
     * @return {Date}
     */
    getDeletedAt() {
        return this.deleted_at;
    }

    /**
     * @param {Date} deletedAt
     */
    setDeletedAt(deletedAt) {
        this['deleted_at'] = deletedAt;
    }
/**
     * @return {Number}
     */
    getExternalStationId() {
        return this._external_station_id;
    }

    /**
     * @param {Number} externalStationId
     */
    setExternalStationId(externalStationId) {
        this['_external_station_id'] = externalStationId;
    }
/**
     * @return {String}
     */
    getName() {
        return this.name;
    }

    /**
     * @param {String} name
     */
    setName(name) {
        this['name'] = name;
    }
/**
     * @return {module:models/TagRelationsBroadcasts}
     */
    getBroadcasts() {
        return this.broadcasts;
    }

    /**
     * @param {module:models/TagRelationsBroadcasts} broadcasts
     */
    setBroadcasts(broadcasts) {
        this['broadcasts'] = broadcasts;
    }
/**
     * @return {module:models/TagRelationsPrograms}
     */
    getPrograms() {
        return this.programs;
    }

    /**
     * @param {module:models/TagRelationsPrograms} programs
     */
    setPrograms(programs) {
        this['programs'] = programs;
    }
/**
     * @return {module:models/TagRelationsContacts}
     */
    getContacts() {
        return this.contacts;
    }

    /**
     * @param {module:models/TagRelationsContacts} contacts
     */
    setContacts(contacts) {
        this['contacts'] = contacts;
    }
/**
     * @return {module:models/TagRelationsItems}
     */
    getItems() {
        return this.items;
    }

    /**
     * @param {module:models/TagRelationsItems} items
     */
    setItems(items) {
        this['items'] = items;
    }

}

TagResult.RequiredProperties = ["id", "name"];

/**
 * @member {Number} id
 */
TagResult.prototype['id'] = undefined;

/**
 * @member {Date} created_at
 */
TagResult.prototype['created_at'] = undefined;

/**
 * @member {Date} updated_at
 */
TagResult.prototype['updated_at'] = undefined;

/**
 * @member {Date} deleted_at
 */
TagResult.prototype['deleted_at'] = undefined;

/**
 * @member {Number} _external_station_id
 */
TagResult.prototype['_external_station_id'] = undefined;

/**
 * @member {String} name
 */
TagResult.prototype['name'] = undefined;

/**
 * @member {module:models/TagRelationsBroadcasts} broadcasts
 */
TagResult.prototype['broadcasts'] = undefined;

/**
 * @member {module:models/TagRelationsPrograms} programs
 */
TagResult.prototype['programs'] = undefined;

/**
 * @member {module:models/TagRelationsContacts} contacts
 */
TagResult.prototype['contacts'] = undefined;

/**
 * @member {module:models/TagRelationsItems} items
 */
TagResult.prototype['items'] = undefined;


// Implement TagOutputOnly interface:
/**
 * @member {Number} id
 */
TagOutputOnly.prototype['id'] = undefined;
/**
 * @member {Date} created_at
 */
TagOutputOnly.prototype['created_at'] = undefined;
/**
 * @member {Date} updated_at
 */
TagOutputOnly.prototype['updated_at'] = undefined;
/**
 * @member {Date} deleted_at
 */
TagOutputOnly.prototype['deleted_at'] = undefined;
/**
 * @member {Number} _external_station_id
 */
TagOutputOnly.prototype['_external_station_id'] = undefined;
// Implement Tag interface:
/**
 * @member {String} name
 */
Tag.prototype['name'] = undefined;
// Implement TagRelations interface:
/**
 * @member {module:models/TagRelationsBroadcasts} broadcasts
 */
TagRelations.prototype['broadcasts'] = undefined;
/**
 * @member {module:models/TagRelationsPrograms} programs
 */
TagRelations.prototype['programs'] = undefined;
/**
 * @member {module:models/TagRelationsContacts} contacts
 */
TagRelations.prototype['contacts'] = undefined;
/**
 * @member {module:models/TagRelationsItems} items
 */
TagRelations.prototype['items'] = undefined;




export default TagResult;

