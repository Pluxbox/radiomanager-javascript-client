/**
 * RadioManager
 * This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@pluxbox.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Group from './Group';
import GroupOutputOnly from './GroupOutputOnly';
import GroupRelations from './GroupRelations';
import GroupRelationsBroadcasts from './GroupRelationsBroadcasts';
import GroupRelationsPrograms from './GroupRelationsPrograms';
import GroupRelationsUsers from './GroupRelationsUsers';

/**
 * The GroupResult model module.
 * @module models/GroupResult
 * @version 2.0
 */
class GroupResult {
    /**
     * Constructs a new <code>GroupResult</code>.
     * @alias module:models/GroupResult
     * @implements module:models/GroupOutputOnly
     * @implements module:models/Group
     * @implements module:models/GroupRelations
     * @param id {Number} 
     * @param updatedAt {Date} 
     * @param createdAt {Date} 
     * @param deletedAt {Date} 
     */
    constructor(id, updatedAt, createdAt, deletedAt) { 
        GroupOutputOnly.initialize(this, id, updatedAt, createdAt, deletedAt);Group.initialize(this, id, updatedAt, createdAt);GroupRelations.initialize(this);
        GroupResult.initialize(this, id, updatedAt, createdAt, deletedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, updatedAt, createdAt, deletedAt) { 
        obj['id'] = id;
        obj['updated_at'] = updatedAt;
        obj['created_at'] = createdAt;
        obj['deleted_at'] = deletedAt;
    }

    /**
     * Constructs a <code>GroupResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/GroupResult} obj Optional instance to populate.
     * @return {module:models/GroupResult} The populated <code>GroupResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GroupResult();
            GroupOutputOnly.constructFromObject(data, obj);
            Group.constructFromObject(data, obj);
            GroupRelations.constructFromObject(data, obj);

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('deleted_at')) {
                obj['deleted_at'] = ApiClient.convertToType(data['deleted_at'], 'Date');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('users')) {
                obj['users'] = GroupRelationsUsers.constructFromObject(data['users']);
            }
            if (data.hasOwnProperty('broadcasts')) {
                obj['broadcasts'] = GroupRelationsBroadcasts.constructFromObject(data['broadcasts']);
            }
            if (data.hasOwnProperty('programs')) {
                obj['programs'] = GroupRelationsPrograms.constructFromObject(data['programs']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GroupResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GroupResult</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GroupResult.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // validate the optional field `users`
        if (data['users']) { // data not null
          GroupRelationsUsers.validateJSON(data['users']);
        }
        // validate the optional field `broadcasts`
        if (data['broadcasts']) { // data not null
          GroupRelationsBroadcasts.validateJSON(data['broadcasts']);
        }
        // validate the optional field `programs`
        if (data['programs']) { // data not null
          GroupRelationsPrograms.validateJSON(data['programs']);
        }

        return true;
    }

/**
     * @return {Number}
     */
    getId() {
        return this.id;
    }

    /**
     * @param {Number} id
     */
    setId(id) {
        this['id'] = id;
    }
/**
     * @return {Date}
     */
    getUpdatedAt() {
        return this.updated_at;
    }

    /**
     * @param {Date} updatedAt
     */
    setUpdatedAt(updatedAt) {
        this['updated_at'] = updatedAt;
    }
/**
     * @return {Date}
     */
    getCreatedAt() {
        return this.created_at;
    }

    /**
     * @param {Date} createdAt
     */
    setCreatedAt(createdAt) {
        this['created_at'] = createdAt;
    }
/**
     * @return {Date}
     */
    getDeletedAt() {
        return this.deleted_at;
    }

    /**
     * @param {Date} deletedAt
     */
    setDeletedAt(deletedAt) {
        this['deleted_at'] = deletedAt;
    }
/**
     * @return {String}
     */
    getTitle() {
        return this.title;
    }

    /**
     * @param {String} title
     */
    setTitle(title) {
        this['title'] = title;
    }
/**
     * @return {module:models/GroupRelationsUsers}
     */
    getUsers() {
        return this.users;
    }

    /**
     * @param {module:models/GroupRelationsUsers} users
     */
    setUsers(users) {
        this['users'] = users;
    }
/**
     * @return {module:models/GroupRelationsBroadcasts}
     */
    getBroadcasts() {
        return this.broadcasts;
    }

    /**
     * @param {module:models/GroupRelationsBroadcasts} broadcasts
     */
    setBroadcasts(broadcasts) {
        this['broadcasts'] = broadcasts;
    }
/**
     * @return {module:models/GroupRelationsPrograms}
     */
    getPrograms() {
        return this.programs;
    }

    /**
     * @param {module:models/GroupRelationsPrograms} programs
     */
    setPrograms(programs) {
        this['programs'] = programs;
    }

}

GroupResult.RequiredProperties = ["id", "updated_at", "created_at", "deleted_at"];

/**
 * @member {Number} id
 */
GroupResult.prototype['id'] = undefined;

/**
 * @member {Date} updated_at
 */
GroupResult.prototype['updated_at'] = undefined;

/**
 * @member {Date} created_at
 */
GroupResult.prototype['created_at'] = undefined;

/**
 * @member {Date} deleted_at
 */
GroupResult.prototype['deleted_at'] = undefined;

/**
 * @member {String} title
 */
GroupResult.prototype['title'] = undefined;

/**
 * @member {module:models/GroupRelationsUsers} users
 */
GroupResult.prototype['users'] = undefined;

/**
 * @member {module:models/GroupRelationsBroadcasts} broadcasts
 */
GroupResult.prototype['broadcasts'] = undefined;

/**
 * @member {module:models/GroupRelationsPrograms} programs
 */
GroupResult.prototype['programs'] = undefined;


// Implement GroupOutputOnly interface:
/**
 * @member {Number} id
 */
GroupOutputOnly.prototype['id'] = undefined;
/**
 * @member {Date} updated_at
 */
GroupOutputOnly.prototype['updated_at'] = undefined;
/**
 * @member {Date} created_at
 */
GroupOutputOnly.prototype['created_at'] = undefined;
/**
 * @member {Date} deleted_at
 */
GroupOutputOnly.prototype['deleted_at'] = undefined;
// Implement Group interface:
/**
 * @member {Number} id
 */
Group.prototype['id'] = undefined;
/**
 * @member {Date} updated_at
 */
Group.prototype['updated_at'] = undefined;
/**
 * @member {Date} created_at
 */
Group.prototype['created_at'] = undefined;
/**
 * @member {String} title
 */
Group.prototype['title'] = undefined;
// Implement GroupRelations interface:
/**
 * @member {module:models/GroupRelationsUsers} users
 */
GroupRelations.prototype['users'] = undefined;
/**
 * @member {module:models/GroupRelationsBroadcasts} broadcasts
 */
GroupRelations.prototype['broadcasts'] = undefined;
/**
 * @member {module:models/GroupRelationsPrograms} programs
 */
GroupRelations.prototype['programs'] = undefined;




export default GroupResult;

