/**
 * RadioManager
 * This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@pluxbox.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Campaign from './Campaign';

/**
 * The CampaignDataInput model module.
 * @module models/CampaignDataInput
 * @version 2.0
 */
class CampaignDataInput {
    /**
     * Constructs a new <code>CampaignDataInput</code>.
     * @alias module:models/CampaignDataInput
     * @implements module:models/Campaign
     * @param modelTypeId {Number} 
     * @param start {Date} 
     * @param stop {Date} 
     */
    constructor(modelTypeId, start, stop) { 
        Campaign.initialize(this, modelTypeId, start, stop);
        CampaignDataInput.initialize(this, modelTypeId, start, stop);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, modelTypeId, start, stop) { 
        obj['model_type_id'] = modelTypeId;
        obj['start'] = start;
        obj['stop'] = stop;
    }

    /**
     * Constructs a <code>CampaignDataInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/CampaignDataInput} obj Optional instance to populate.
     * @return {module:models/CampaignDataInput} The populated <code>CampaignDataInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CampaignDataInput();
            Campaign.constructFromObject(data, obj);

            if (data.hasOwnProperty('model_type_id')) {
                obj['model_type_id'] = ApiClient.convertToType(data['model_type_id'], 'Number');
            }
            if (data.hasOwnProperty('field_values')) {
                obj['field_values'] = ApiClient.convertToType(data['field_values'], Object);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'Date');
            }
            if (data.hasOwnProperty('stop')) {
                obj['stop'] = ApiClient.convertToType(data['stop'], 'Date');
            }
            if (data.hasOwnProperty('recommended')) {
                obj['recommended'] = ApiClient.convertToType(data['recommended'], 'Boolean');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CampaignDataInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CampaignDataInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CampaignDataInput.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }

        return true;
    }

/**
     * @return {Number}
     */
    getModelTypeId() {
        return this.model_type_id;
    }

    /**
     * @param {Number} modelTypeId
     */
    setModelTypeId(modelTypeId) {
        this['model_type_id'] = modelTypeId;
    }
/**
     * @return {Object}
     */
    getFieldValues() {
        return this.field_values;
    }

    /**
     * @param {Object} fieldValues
     */
    setFieldValues(fieldValues) {
        this['field_values'] = fieldValues;
    }
/**
     * @return {String}
     */
    getTitle() {
        return this.title;
    }

    /**
     * @param {String} title
     */
    setTitle(title) {
        this['title'] = title;
    }
/**
     * @return {Date}
     */
    getStart() {
        return this.start;
    }

    /**
     * @param {Date} start
     */
    setStart(start) {
        this['start'] = start;
    }
/**
     * @return {Date}
     */
    getStop() {
        return this.stop;
    }

    /**
     * @param {Date} stop
     */
    setStop(stop) {
        this['stop'] = stop;
    }
/**
     * @return {Boolean}
     */
    getRecommended() {
        return this.recommended;
    }

    /**
     * @param {Boolean} recommended
     */
    setRecommended(recommended) {
        this['recommended'] = recommended;
    }
/**
     * @return {String}
     */
    getDescription() {
        return this.description;
    }

    /**
     * @param {String} description
     */
    setDescription(description) {
        this['description'] = description;
    }

}

CampaignDataInput.RequiredProperties = ["model_type_id", "start", "stop"];

/**
 * @member {Number} model_type_id
 */
CampaignDataInput.prototype['model_type_id'] = undefined;

/**
 * @member {Object} field_values
 */
CampaignDataInput.prototype['field_values'] = undefined;

/**
 * @member {String} title
 */
CampaignDataInput.prototype['title'] = undefined;

/**
 * @member {Date} start
 */
CampaignDataInput.prototype['start'] = undefined;

/**
 * @member {Date} stop
 */
CampaignDataInput.prototype['stop'] = undefined;

/**
 * @member {Boolean} recommended
 */
CampaignDataInput.prototype['recommended'] = undefined;

/**
 * @member {String} description
 */
CampaignDataInput.prototype['description'] = undefined;


// Implement Campaign interface:
/**
 * @member {Number} model_type_id
 */
Campaign.prototype['model_type_id'] = undefined;
/**
 * @member {Object} field_values
 */
Campaign.prototype['field_values'] = undefined;
/**
 * @member {String} title
 */
Campaign.prototype['title'] = undefined;
/**
 * @member {Date} start
 */
Campaign.prototype['start'] = undefined;
/**
 * @member {Date} stop
 */
Campaign.prototype['stop'] = undefined;
/**
 * @member {Boolean} recommended
 */
Campaign.prototype['recommended'] = undefined;
/**
 * @member {String} description
 */
Campaign.prototype['description'] = undefined;




export default CampaignDataInput;

