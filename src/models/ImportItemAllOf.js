/**
 * RadioManager
 * This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@pluxbox.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ImportItemAllOf model module.
 * @module models/ImportItemAllOf
 * @version 2.0
 */
class ImportItemAllOf {
    /**
     * Constructs a new <code>ImportItemAllOf</code>.
     * @alias module:models/ImportItemAllOf
     * @param modelTypeId {Number} 
     * @param externalId {String} 
     */
    constructor(modelTypeId, externalId) { 
        
        ImportItemAllOf.initialize(this, modelTypeId, externalId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, modelTypeId, externalId) { 
        obj['model_type_id'] = modelTypeId;
        obj['external_id'] = externalId;
    }

    /**
     * Constructs a <code>ImportItemAllOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/ImportItemAllOf} obj Optional instance to populate.
     * @return {module:models/ImportItemAllOf} The populated <code>ImportItemAllOf</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImportItemAllOf();

            if (data.hasOwnProperty('model_type_id')) {
                obj['model_type_id'] = ApiClient.convertToType(data['model_type_id'], 'Number');
            }
            if (data.hasOwnProperty('external_id')) {
                obj['external_id'] = ApiClient.convertToType(data['external_id'], 'String');
            }
            if (data.hasOwnProperty('field_values')) {
                obj['field_values'] = ApiClient.convertToType(data['field_values'], Object);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'Date');
            }
            if (data.hasOwnProperty('recommended')) {
                obj['recommended'] = ApiClient.convertToType(data['recommended'], 'Boolean');
            }
            if (data.hasOwnProperty('static_start')) {
                obj['static_start'] = ApiClient.convertToType(data['static_start'], 'Boolean');
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], 'String');
            }
            if (data.hasOwnProperty('contacts')) {
                obj['contacts'] = ApiClient.convertToType(data['contacts'], ['Number']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['Number']);
            }
            if (data.hasOwnProperty('broadcast_id')) {
                obj['broadcast_id'] = ApiClient.convertToType(data['broadcast_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImportItemAllOf</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImportItemAllOf</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ImportItemAllOf.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['external_id'] && !(typeof data['external_id'] === 'string' || data['external_id'] instanceof String)) {
            throw new Error("Expected the field `external_id` to be a primitive type in the JSON string but got " + data['external_id']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['details'] && !(typeof data['details'] === 'string' || data['details'] instanceof String)) {
            throw new Error("Expected the field `details` to be a primitive type in the JSON string but got " + data['details']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['contacts'])) {
            throw new Error("Expected the field `contacts` to be an array in the JSON data but got " + data['contacts']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }

        return true;
    }

/**
     * @return {Number}
     */
    getModelTypeId() {
        return this.model_type_id;
    }

    /**
     * @param {Number} modelTypeId
     */
    setModelTypeId(modelTypeId) {
        this['model_type_id'] = modelTypeId;
    }
/**
     * @return {String}
     */
    getExternalId() {
        return this.external_id;
    }

    /**
     * @param {String} externalId
     */
    setExternalId(externalId) {
        this['external_id'] = externalId;
    }
/**
     * @return {Object}
     */
    getFieldValues() {
        return this.field_values;
    }

    /**
     * @param {Object} fieldValues
     */
    setFieldValues(fieldValues) {
        this['field_values'] = fieldValues;
    }
/**
     * @return {String}
     */
    getTitle() {
        return this.title;
    }

    /**
     * @param {String} title
     */
    setTitle(title) {
        this['title'] = title;
    }
/**
     * @return {Number}
     */
    getDuration() {
        return this.duration;
    }

    /**
     * @param {Number} duration
     */
    setDuration(duration) {
        this['duration'] = duration;
    }
/**
     * @return {Date}
     */
    getStart() {
        return this.start;
    }

    /**
     * @param {Date} start
     */
    setStart(start) {
        this['start'] = start;
    }
/**
     * @return {Boolean}
     */
    getRecommended() {
        return this.recommended;
    }

    /**
     * @param {Boolean} recommended
     */
    setRecommended(recommended) {
        this['recommended'] = recommended;
    }
/**
     * @return {Boolean}
     */
    getStaticStart() {
        return this.static_start;
    }

    /**
     * @param {Boolean} staticStart
     */
    setStaticStart(staticStart) {
        this['static_start'] = staticStart;
    }
/**
     * @return {String}
     */
    getDetails() {
        return this.details;
    }

    /**
     * @param {String} details
     */
    setDetails(details) {
        this['details'] = details;
    }
/**
     * @return {Array.<Number>}
     */
    getContacts() {
        return this.contacts;
    }

    /**
     * @param {Array.<Number>} contacts
     */
    setContacts(contacts) {
        this['contacts'] = contacts;
    }
/**
     * @return {Array.<Number>}
     */
    getTags() {
        return this.tags;
    }

    /**
     * @param {Array.<Number>} tags
     */
    setTags(tags) {
        this['tags'] = tags;
    }
/**
     * @return {Number}
     */
    getBroadcastId() {
        return this.broadcast_id;
    }

    /**
     * @param {Number} broadcastId
     */
    setBroadcastId(broadcastId) {
        this['broadcast_id'] = broadcastId;
    }

}

ImportItemAllOf.RequiredProperties = ["model_type_id", "external_id"];

/**
 * @member {Number} model_type_id
 */
ImportItemAllOf.prototype['model_type_id'] = undefined;

/**
 * @member {String} external_id
 */
ImportItemAllOf.prototype['external_id'] = undefined;

/**
 * @member {Object} field_values
 */
ImportItemAllOf.prototype['field_values'] = undefined;

/**
 * @member {String} title
 */
ImportItemAllOf.prototype['title'] = undefined;

/**
 * @member {Number} duration
 */
ImportItemAllOf.prototype['duration'] = undefined;

/**
 * @member {Date} start
 */
ImportItemAllOf.prototype['start'] = undefined;

/**
 * @member {Boolean} recommended
 */
ImportItemAllOf.prototype['recommended'] = undefined;

/**
 * @member {Boolean} static_start
 */
ImportItemAllOf.prototype['static_start'] = undefined;

/**
 * @member {String} details
 */
ImportItemAllOf.prototype['details'] = undefined;

/**
 * @member {Array.<Number>} contacts
 */
ImportItemAllOf.prototype['contacts'] = undefined;

/**
 * @member {Array.<Number>} tags
 */
ImportItemAllOf.prototype['tags'] = undefined;

/**
 * @member {Number} broadcast_id
 */
ImportItemAllOf.prototype['broadcast_id'] = undefined;






export default ImportItemAllOf;

