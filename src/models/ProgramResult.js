/**
 * RadioManager
 * RadioManager
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@pluxbox.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'models/BroadcastRelationsGenre', 'models/BroadcastRelationsModelType', 'models/Program', 'models/ProgramOutputOnly', 'models/ProgramRelations', 'models/ProgramRelationsBlocks', 'models/ProgramRelationsBroadcasts', 'models/ProgramRelationsItems', 'models/ProgramRelationsPresenters', 'models/ProgramRelationsTags'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BroadcastRelationsGenre'), require('./BroadcastRelationsModelType'), require('./Program'), require('./ProgramOutputOnly'), require('./ProgramRelations'), require('./ProgramRelationsBlocks'), require('./ProgramRelationsBroadcasts'), require('./ProgramRelationsItems'), require('./ProgramRelationsPresenters'), require('./ProgramRelationsTags'));
  } else {
    // Browser globals (root is window)
    if (!root.radiomanager) {
      root.radiomanager = {};
    }
    root.radiomanager.ProgramResult = factory(root.radiomanager.ApiClient, root.radiomanager.BroadcastRelationsGenre, root.radiomanager.BroadcastRelationsModelType, root.radiomanager.Program, root.radiomanager.ProgramOutputOnly, root.radiomanager.ProgramRelations, root.radiomanager.ProgramRelationsBlocks, root.radiomanager.ProgramRelationsBroadcasts, root.radiomanager.ProgramRelationsItems, root.radiomanager.ProgramRelationsPresenters, root.radiomanager.ProgramRelationsTags);
  }
}(this, function(ApiClient, BroadcastRelationsGenre, BroadcastRelationsModelType, Program, ProgramOutputOnly, ProgramRelations, ProgramRelationsBlocks, ProgramRelationsBroadcasts, ProgramRelationsItems, ProgramRelationsPresenters, ProgramRelationsTags) {
  'use strict';



  /**
   * The ProgramResult model module.
   * @module models/ProgramResult
   * @version 2.0
   */

  /**
   * Constructs a new <code>ProgramResult</code>.
   * @alias module:models/ProgramResult
   * @class
   * @implements module:models/ProgramOutputOnly
   * @implements module:models/Program
   * @implements module:models/ProgramRelations
   * @param id {Number} 
   * @param updatedAt {Date} 
   * @param createdAt {Date} 
   * @param deletedAt {Date} 
   * @param modelTypeId {Number} 
   * @param title {String} 
   */
  var exports = function(id, updatedAt, createdAt, deletedAt, modelTypeId, title) {
    var _this = this;

    ProgramOutputOnly.call(_this, id, updatedAt, createdAt, deletedAt);
    Program.call(_this, modelTypeId, title);
    ProgramRelations.call(_this);
    _this['id'] = id;
    _this['updated_at'] = updatedAt;
    _this['created_at'] = createdAt;
    _this['deleted_at'] = deletedAt;
    _this['model_type_id'] = modelTypeId;
    _this['title'] = title;
  };

  /**
   * Constructs a <code>ProgramResult</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:models/ProgramResult} obj Optional instance to populate.
   * @return {module:models/ProgramResult} The populated <code>ProgramResult</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      ProgramOutputOnly.constructFromObject(data, obj);
      Program.constructFromObject(data, obj);
      ProgramRelations.constructFromObject(data, obj);
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('updated_at')) {
        obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
      }
      if (data.hasOwnProperty('created_at')) {
        obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
      }
      if (data.hasOwnProperty('deleted_at')) {
        obj['deleted_at'] = ApiClient.convertToType(data['deleted_at'], 'Date');
      }
      if (data.hasOwnProperty('_external_station_id')) {
        obj['_external_station_id'] = ApiClient.convertToType(data['_external_station_id'], 'Number');
      }
      if (data.hasOwnProperty('model_type_id')) {
        obj['model_type_id'] = ApiClient.convertToType(data['model_type_id'], 'Number');
      }
      if (data.hasOwnProperty('field_values')) {
        obj['field_values'] = ApiClient.convertToType(data['field_values'], Object);
      }
      if (data.hasOwnProperty('title')) {
        obj['title'] = ApiClient.convertToType(data['title'], 'String');
      }
      if (data.hasOwnProperty('disabled')) {
        obj['disabled'] = ApiClient.convertToType(data['disabled'], 'Boolean');
      }
      if (data.hasOwnProperty('genre_id')) {
        obj['genre_id'] = ApiClient.convertToType(data['genre_id'], 'Number');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('short_name')) {
        obj['short_name'] = ApiClient.convertToType(data['short_name'], 'String');
      }
      if (data.hasOwnProperty('medium_name')) {
        obj['medium_name'] = ApiClient.convertToType(data['medium_name'], 'String');
      }
      if (data.hasOwnProperty('website')) {
        obj['website'] = ApiClient.convertToType(data['website'], 'String');
      }
      if (data.hasOwnProperty('email')) {
        obj['email'] = ApiClient.convertToType(data['email'], 'String');
      }
      if (data.hasOwnProperty('recommended')) {
        obj['recommended'] = ApiClient.convertToType(data['recommended'], 'Boolean');
      }
      if (data.hasOwnProperty('language')) {
        obj['language'] = ApiClient.convertToType(data['language'], 'String');
      }
      if (data.hasOwnProperty('pty_code_id')) {
        obj['pty_code_id'] = ApiClient.convertToType(data['pty_code_id'], 'Number');
      }
      if (data.hasOwnProperty('genre')) {
        obj['genre'] = BroadcastRelationsGenre.constructFromObject(data['genre']);
      }
      if (data.hasOwnProperty('items')) {
        obj['items'] = ProgramRelationsItems.constructFromObject(data['items']);
      }
      if (data.hasOwnProperty('blocks')) {
        obj['blocks'] = ProgramRelationsBlocks.constructFromObject(data['blocks']);
      }
      if (data.hasOwnProperty('broadcasts')) {
        obj['broadcasts'] = ProgramRelationsBroadcasts.constructFromObject(data['broadcasts']);
      }
      if (data.hasOwnProperty('presenters')) {
        obj['presenters'] = ProgramRelationsPresenters.constructFromObject(data['presenters']);
      }
      if (data.hasOwnProperty('tags')) {
        obj['tags'] = ProgramRelationsTags.constructFromObject(data['tags']);
      }
      if (data.hasOwnProperty('model_type')) {
        obj['model_type'] = BroadcastRelationsModelType.constructFromObject(data['model_type']);
      }
    }
    return obj;
  }

  /**
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {Date} updated_at
   */
  exports.prototype['updated_at'] = undefined;
  /**
   * @member {Date} created_at
   */
  exports.prototype['created_at'] = undefined;
  /**
   * @member {Date} deleted_at
   */
  exports.prototype['deleted_at'] = undefined;
  /**
   * @member {Number} _external_station_id
   */
  exports.prototype['_external_station_id'] = undefined;
  /**
   * @member {Number} model_type_id
   */
  exports.prototype['model_type_id'] = undefined;
  /**
   * @member {Object} field_values
   */
  exports.prototype['field_values'] = undefined;
  /**
   * @member {String} title
   */
  exports.prototype['title'] = undefined;
  /**
   * @member {Boolean} disabled
   */
  exports.prototype['disabled'] = undefined;
  /**
   * @member {Number} genre_id
   */
  exports.prototype['genre_id'] = undefined;
  /**
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * @member {String} short_name
   */
  exports.prototype['short_name'] = undefined;
  /**
   * @member {String} medium_name
   */
  exports.prototype['medium_name'] = undefined;
  /**
   * @member {String} website
   */
  exports.prototype['website'] = undefined;
  /**
   * @member {String} email
   */
  exports.prototype['email'] = undefined;
  /**
   * @member {Boolean} recommended
   */
  exports.prototype['recommended'] = undefined;
  /**
   * @member {String} language
   */
  exports.prototype['language'] = undefined;
  /**
   * @member {Number} pty_code_id
   */
  exports.prototype['pty_code_id'] = undefined;
  /**
   * @member {module:models/BroadcastRelationsGenre} genre
   */
  exports.prototype['genre'] = undefined;
  /**
   * @member {module:models/ProgramRelationsItems} items
   */
  exports.prototype['items'] = undefined;
  /**
   * @member {module:models/ProgramRelationsBlocks} blocks
   */
  exports.prototype['blocks'] = undefined;
  /**
   * @member {module:models/ProgramRelationsBroadcasts} broadcasts
   */
  exports.prototype['broadcasts'] = undefined;
  /**
   * @member {module:models/ProgramRelationsPresenters} presenters
   */
  exports.prototype['presenters'] = undefined;
  /**
   * @member {module:models/ProgramRelationsTags} tags
   */
  exports.prototype['tags'] = undefined;
  /**
   * @member {module:models/BroadcastRelationsModelType} model_type
   */
  exports.prototype['model_type'] = undefined;

  // Implement ProgramOutputOnly interface:
  /**
   * @member {Number} id
   */
exports.prototype['id'] = undefined;

  /**
   * @member {Date} updated_at
   */
exports.prototype['updated_at'] = undefined;

  /**
   * @member {Date} created_at
   */
exports.prototype['created_at'] = undefined;

  /**
   * @member {Date} deleted_at
   */
exports.prototype['deleted_at'] = undefined;

  /**
   * @member {Number} _external_station_id
   */
exports.prototype['_external_station_id'] = undefined;

  // Implement Program interface:
  /**
   * @member {Number} model_type_id
   */
exports.prototype['model_type_id'] = undefined;

  /**
   * @member {Object} field_values
   */
exports.prototype['field_values'] = undefined;

  /**
   * @member {String} title
   */
exports.prototype['title'] = undefined;

  /**
   * @member {Boolean} disabled
   */
exports.prototype['disabled'] = undefined;

  /**
   * @member {Number} genre_id
   */
exports.prototype['genre_id'] = undefined;

  /**
   * @member {String} description
   */
exports.prototype['description'] = undefined;

  /**
   * @member {String} short_name
   */
exports.prototype['short_name'] = undefined;

  /**
   * @member {String} medium_name
   */
exports.prototype['medium_name'] = undefined;

  /**
   * @member {String} website
   */
exports.prototype['website'] = undefined;

  /**
   * @member {String} email
   */
exports.prototype['email'] = undefined;

  /**
   * @member {Boolean} recommended
   */
exports.prototype['recommended'] = undefined;

  /**
   * @member {String} language
   */
exports.prototype['language'] = undefined;

  /**
   * @member {Number} pty_code_id
   */
exports.prototype['pty_code_id'] = undefined;

  // Implement ProgramRelations interface:
  /**
   * @member {module:models/BroadcastRelationsGenre} genre
   */
exports.prototype['genre'] = undefined;

  /**
   * @member {module:models/ProgramRelationsItems} items
   */
exports.prototype['items'] = undefined;

  /**
   * @member {module:models/ProgramRelationsBlocks} blocks
   */
exports.prototype['blocks'] = undefined;

  /**
   * @member {module:models/ProgramRelationsBroadcasts} broadcasts
   */
exports.prototype['broadcasts'] = undefined;

  /**
   * @member {module:models/ProgramRelationsPresenters} presenters
   */
exports.prototype['presenters'] = undefined;

  /**
   * @member {module:models/ProgramRelationsTags} tags
   */
exports.prototype['tags'] = undefined;

  /**
   * @member {module:models/BroadcastRelationsModelType} model_type
   */
exports.prototype['model_type'] = undefined;


  /**
   * @return {Number}
   */
  exports.prototype.getId = function() {
    return this['id'];
  }

  /**
   * @param {Number} id
   */
  exports.prototype.setId = function(id) {
    this['id'] = id;
  }


  /**
   * @return {Date}
   */
  exports.prototype.getUpdatedAt = function() {
    return this['updated_at'];
  }

  /**
   * @param {Date} updatedAt
   */
  exports.prototype.setUpdatedAt = function(updatedAt) {
    this['updated_at'] = updatedAt;
  }


  /**
   * @return {Date}
   */
  exports.prototype.getCreatedAt = function() {
    return this['created_at'];
  }

  /**
   * @param {Date} createdAt
   */
  exports.prototype.setCreatedAt = function(createdAt) {
    this['created_at'] = createdAt;
  }


  /**
   * @return {Date}
   */
  exports.prototype.getDeletedAt = function() {
    return this['deleted_at'];
  }

  /**
   * @param {Date} deletedAt
   */
  exports.prototype.setDeletedAt = function(deletedAt) {
    this['deleted_at'] = deletedAt;
  }


  /**
   * @return {Number}
   */
  exports.prototype.getExternalStationId = function() {
    return this['_external_station_id'];
  }

  /**
   * @param {Number} externalStationId
   */
  exports.prototype.setExternalStationId = function(externalStationId) {
    this['_external_station_id'] = externalStationId;
  }


  /**
   * @return {Number}
   */
  exports.prototype.getModelTypeId = function() {
    return this['model_type_id'];
  }

  /**
   * @param {Number} modelTypeId
   */
  exports.prototype.setModelTypeId = function(modelTypeId) {
    this['model_type_id'] = modelTypeId;
  }


  /**
   * @return {Object}
   */
  exports.prototype.getFieldValues = function() {
    return this['field_values'];
  }

  /**
   * @param {Object} fieldValues
   */
  exports.prototype.setFieldValues = function(fieldValues) {
    this['field_values'] = fieldValues;
  }


  /**
   * @return {String}
   */
  exports.prototype.getTitle = function() {
    return this['title'];
  }

  /**
   * @param {String} title
   */
  exports.prototype.setTitle = function(title) {
    this['title'] = title;
  }


  /**
   * @return {Boolean}
   */
  exports.prototype.getDisabled = function() {
    return this['disabled'];
  }

  /**
   * @param {Boolean} disabled
   */
  exports.prototype.setDisabled = function(disabled) {
    this['disabled'] = disabled;
  }


  /**
   * @return {Number}
   */
  exports.prototype.getGenreId = function() {
    return this['genre_id'];
  }

  /**
   * @param {Number} genreId
   */
  exports.prototype.setGenreId = function(genreId) {
    this['genre_id'] = genreId;
  }


  /**
   * @return {String}
   */
  exports.prototype.getDescription = function() {
    return this['description'];
  }

  /**
   * @param {String} description
   */
  exports.prototype.setDescription = function(description) {
    this['description'] = description;
  }


  /**
   * @return {String}
   */
  exports.prototype.getShortName = function() {
    return this['short_name'];
  }

  /**
   * @param {String} shortName
   */
  exports.prototype.setShortName = function(shortName) {
    this['short_name'] = shortName;
  }


  /**
   * @return {String}
   */
  exports.prototype.getMediumName = function() {
    return this['medium_name'];
  }

  /**
   * @param {String} mediumName
   */
  exports.prototype.setMediumName = function(mediumName) {
    this['medium_name'] = mediumName;
  }


  /**
   * @return {String}
   */
  exports.prototype.getWebsite = function() {
    return this['website'];
  }

  /**
   * @param {String} website
   */
  exports.prototype.setWebsite = function(website) {
    this['website'] = website;
  }


  /**
   * @return {String}
   */
  exports.prototype.getEmail = function() {
    return this['email'];
  }

  /**
   * @param {String} email
   */
  exports.prototype.setEmail = function(email) {
    this['email'] = email;
  }


  /**
   * @return {Boolean}
   */
  exports.prototype.getRecommended = function() {
    return this['recommended'];
  }

  /**
   * @param {Boolean} recommended
   */
  exports.prototype.setRecommended = function(recommended) {
    this['recommended'] = recommended;
  }


  /**
   * @return {String}
   */
  exports.prototype.getLanguage = function() {
    return this['language'];
  }

  /**
   * @param {String} language
   */
  exports.prototype.setLanguage = function(language) {
    this['language'] = language;
  }


  /**
   * @return {Number}
   */
  exports.prototype.getPtyCodeId = function() {
    return this['pty_code_id'];
  }

  /**
   * @param {Number} ptyCodeId
   */
  exports.prototype.setPtyCodeId = function(ptyCodeId) {
    this['pty_code_id'] = ptyCodeId;
  }


  /**
   * @return {module:models/BroadcastRelationsGenre}
   */
  exports.prototype.getGenre = function() {
    return this['genre'];
  }

  /**
   * @param {module:models/BroadcastRelationsGenre} genre
   */
  exports.prototype.setGenre = function(genre) {
    this['genre'] = genre;
  }


  /**
   * @return {module:models/ProgramRelationsItems}
   */
  exports.prototype.getItems = function() {
    return this['items'];
  }

  /**
   * @param {module:models/ProgramRelationsItems} items
   */
  exports.prototype.setItems = function(items) {
    this['items'] = items;
  }


  /**
   * @return {module:models/ProgramRelationsBlocks}
   */
  exports.prototype.getBlocks = function() {
    return this['blocks'];
  }

  /**
   * @param {module:models/ProgramRelationsBlocks} blocks
   */
  exports.prototype.setBlocks = function(blocks) {
    this['blocks'] = blocks;
  }


  /**
   * @return {module:models/ProgramRelationsBroadcasts}
   */
  exports.prototype.getBroadcasts = function() {
    return this['broadcasts'];
  }

  /**
   * @param {module:models/ProgramRelationsBroadcasts} broadcasts
   */
  exports.prototype.setBroadcasts = function(broadcasts) {
    this['broadcasts'] = broadcasts;
  }


  /**
   * @return {module:models/ProgramRelationsPresenters}
   */
  exports.prototype.getPresenters = function() {
    return this['presenters'];
  }

  /**
   * @param {module:models/ProgramRelationsPresenters} presenters
   */
  exports.prototype.setPresenters = function(presenters) {
    this['presenters'] = presenters;
  }


  /**
   * @return {module:models/ProgramRelationsTags}
   */
  exports.prototype.getTags = function() {
    return this['tags'];
  }

  /**
   * @param {module:models/ProgramRelationsTags} tags
   */
  exports.prototype.setTags = function(tags) {
    this['tags'] = tags;
  }


  /**
   * @return {module:models/BroadcastRelationsModelType}
   */
  exports.prototype.getModelType = function() {
    return this['model_type'];
  }

  /**
   * @param {module:models/BroadcastRelationsModelType} modelType
   */
  exports.prototype.setModelType = function(modelType) {
    this['model_type'] = modelType;
  }



  return exports;
}));


