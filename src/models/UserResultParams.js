/**
 * RadioManager
 * This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@pluxbox.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UserResultParams model module.
 * @module models/UserResultParams
 * @version 2.0
 */
class UserResultParams {
    /**
     * Constructs a new <code>UserResultParams</code>.
     * @alias module:models/UserResultParams
     */
    constructor() { 
        
        UserResultParams.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserResultParams</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/UserResultParams} obj Optional instance to populate.
     * @return {module:models/UserResultParams} The populated <code>UserResultParams</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserResultParams();

            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserResultParams</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserResultParams</code>.
     */
    static validateJSON(data) {

        return true;
    }

/**
     * @return {Number}
     */
    getUserId() {
        return this.user_id;
    }

    /**
     * @param {Number} userId
     */
    setUserId(userId) {
        this['user_id'] = userId;
    }

}



/**
 * @member {Number} user_id
 */
UserResultParams.prototype['user_id'] = undefined;






export default UserResultParams;

