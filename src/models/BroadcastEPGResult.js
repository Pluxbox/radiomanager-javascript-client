/**
 * RadioManager
 * This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@pluxbox.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BlockRelationsProgram from './BlockRelationsProgram';
import Broadcast from './Broadcast';
import BroadcastEPGRelations from './BroadcastEPGRelations';
import BroadcastOutputOnly from './BroadcastOutputOnly';
import BroadcastRelationsBlocks from './BroadcastRelationsBlocks';
import BroadcastRelationsItems from './BroadcastRelationsItems';
import BroadcastRelationsModelType from './BroadcastRelationsModelType';
import BroadcastRelationsTags from './BroadcastRelationsTags';
import PresenterEPGResult from './PresenterEPGResult';

/**
 * The BroadcastEPGResult model module.
 * @module models/BroadcastEPGResult
 * @version 2.0
 */
class BroadcastEPGResult {
    /**
     * Constructs a new <code>BroadcastEPGResult</code>.
     * @alias module:models/BroadcastEPGResult
     * @implements module:models/BroadcastOutputOnly
     * @implements module:models/Broadcast
     * @implements module:models/BroadcastEPGRelations
     * @param id {Number} 
     */
    constructor(id) { 
        BroadcastOutputOnly.initialize(this, id);Broadcast.initialize(this);BroadcastEPGRelations.initialize(this);
        BroadcastEPGResult.initialize(this, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id) { 
        obj['id'] = id;
    }

    /**
     * Constructs a <code>BroadcastEPGResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/BroadcastEPGResult} obj Optional instance to populate.
     * @return {module:models/BroadcastEPGResult} The populated <code>BroadcastEPGResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BroadcastEPGResult();
            BroadcastOutputOnly.constructFromObject(data, obj);
            Broadcast.constructFromObject(data, obj);
            BroadcastEPGRelations.constructFromObject(data, obj);

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('deleted_at')) {
                obj['deleted_at'] = ApiClient.convertToType(data['deleted_at'], 'Date');
            }
            if (data.hasOwnProperty('_external_station_id')) {
                obj['_external_station_id'] = ApiClient.convertToType(data['_external_station_id'], 'Number');
            }
            if (data.hasOwnProperty('program_id')) {
                obj['program_id'] = ApiClient.convertToType(data['program_id'], 'Number');
            }
            if (data.hasOwnProperty('model_type_id')) {
                obj['model_type_id'] = ApiClient.convertToType(data['model_type_id'], 'Number');
            }
            if (data.hasOwnProperty('station_id')) {
                obj['station_id'] = ApiClient.convertToType(data['station_id'], 'Number');
            }
            if (data.hasOwnProperty('field_values')) {
                obj['field_values'] = ApiClient.convertToType(data['field_values'], Object);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'Date');
            }
            if (data.hasOwnProperty('stop')) {
                obj['stop'] = ApiClient.convertToType(data['stop'], 'Date');
            }
            if (data.hasOwnProperty('genre_id')) {
                obj['genre_id'] = ApiClient.convertToType(data['genre_id'], 'Number');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('short_name')) {
                obj['short_name'] = ApiClient.convertToType(data['short_name'], 'String');
            }
            if (data.hasOwnProperty('medium_name')) {
                obj['medium_name'] = ApiClient.convertToType(data['medium_name'], 'String');
            }
            if (data.hasOwnProperty('website')) {
                obj['website'] = ApiClient.convertToType(data['website'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('recommended')) {
                obj['recommended'] = ApiClient.convertToType(data['recommended'], 'Boolean');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('published')) {
                obj['published'] = ApiClient.convertToType(data['published'], 'Boolean');
            }
            if (data.hasOwnProperty('repetition_uid')) {
                obj['repetition_uid'] = ApiClient.convertToType(data['repetition_uid'], 'String');
            }
            if (data.hasOwnProperty('repetition_type')) {
                obj['repetition_type'] = ApiClient.convertToType(data['repetition_type'], 'String');
            }
            if (data.hasOwnProperty('repetition_end')) {
                obj['repetition_end'] = ApiClient.convertToType(data['repetition_end'], 'Date');
            }
            if (data.hasOwnProperty('repetition_start')) {
                obj['repetition_start'] = ApiClient.convertToType(data['repetition_start'], 'Date');
            }
            if (data.hasOwnProperty('repetition_days')) {
                obj['repetition_days'] = ApiClient.convertToType(data['repetition_days'], 'String');
            }
            if (data.hasOwnProperty('pty_code_id')) {
                obj['pty_code_id'] = ApiClient.convertToType(data['pty_code_id'], 'Number');
            }
            if (data.hasOwnProperty('planned_in_epg')) {
                obj['planned_in_epg'] = ApiClient.convertToType(data['planned_in_epg'], 'Number');
            }
            if (data.hasOwnProperty('group_id')) {
                obj['group_id'] = ApiClient.convertToType(data['group_id'], 'Number');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = BroadcastRelationsItems.constructFromObject(data['items']);
            }
            if (data.hasOwnProperty('blocks')) {
                obj['blocks'] = BroadcastRelationsBlocks.constructFromObject(data['blocks']);
            }
            if (data.hasOwnProperty('program')) {
                obj['program'] = BlockRelationsProgram.constructFromObject(data['program']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = BroadcastRelationsTags.constructFromObject(data['tags']);
            }
            if (data.hasOwnProperty('presenters')) {
                obj['presenters'] = ApiClient.convertToType(data['presenters'], [PresenterEPGResult]);
            }
            if (data.hasOwnProperty('model_type')) {
                obj['model_type'] = BroadcastRelationsModelType.constructFromObject(data['model_type']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BroadcastEPGResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BroadcastEPGResult</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BroadcastEPGResult.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['short_name'] && !(typeof data['short_name'] === 'string' || data['short_name'] instanceof String)) {
            throw new Error("Expected the field `short_name` to be a primitive type in the JSON string but got " + data['short_name']);
        }
        // ensure the json data is a string
        if (data['medium_name'] && !(typeof data['medium_name'] === 'string' || data['medium_name'] instanceof String)) {
            throw new Error("Expected the field `medium_name` to be a primitive type in the JSON string but got " + data['medium_name']);
        }
        // ensure the json data is a string
        if (data['website'] && !(typeof data['website'] === 'string' || data['website'] instanceof String)) {
            throw new Error("Expected the field `website` to be a primitive type in the JSON string but got " + data['website']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['language'] && !(typeof data['language'] === 'string' || data['language'] instanceof String)) {
            throw new Error("Expected the field `language` to be a primitive type in the JSON string but got " + data['language']);
        }
        // ensure the json data is a string
        if (data['repetition_uid'] && !(typeof data['repetition_uid'] === 'string' || data['repetition_uid'] instanceof String)) {
            throw new Error("Expected the field `repetition_uid` to be a primitive type in the JSON string but got " + data['repetition_uid']);
        }
        // ensure the json data is a string
        if (data['repetition_type'] && !(typeof data['repetition_type'] === 'string' || data['repetition_type'] instanceof String)) {
            throw new Error("Expected the field `repetition_type` to be a primitive type in the JSON string but got " + data['repetition_type']);
        }
        // ensure the json data is a string
        if (data['repetition_days'] && !(typeof data['repetition_days'] === 'string' || data['repetition_days'] instanceof String)) {
            throw new Error("Expected the field `repetition_days` to be a primitive type in the JSON string but got " + data['repetition_days']);
        }
        // validate the optional field `items`
        if (data['items']) { // data not null
          BroadcastRelationsItems.validateJSON(data['items']);
        }
        // validate the optional field `blocks`
        if (data['blocks']) { // data not null
          BroadcastRelationsBlocks.validateJSON(data['blocks']);
        }
        // validate the optional field `program`
        if (data['program']) { // data not null
          BlockRelationsProgram.validateJSON(data['program']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          BroadcastRelationsTags.validateJSON(data['tags']);
        }
        if (data['presenters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['presenters'])) {
                throw new Error("Expected the field `presenters` to be an array in the JSON data but got " + data['presenters']);
            }
            // validate the optional field `presenters` (array)
            for (const item of data['presenters']) {
                PresenterEPGResult.validateJsonObject(item);
            };
        }
        // validate the optional field `model_type`
        if (data['model_type']) { // data not null
          BroadcastRelationsModelType.validateJSON(data['model_type']);
        }

        return true;
    }

/**
     * @return {Number}
     */
    getId() {
        return this.id;
    }

    /**
     * @param {Number} id
     */
    setId(id) {
        this['id'] = id;
    }
/**
     * @return {Date}
     */
    getUpdatedAt() {
        return this.updated_at;
    }

    /**
     * @param {Date} updatedAt
     */
    setUpdatedAt(updatedAt) {
        this['updated_at'] = updatedAt;
    }
/**
     * @return {Date}
     */
    getCreatedAt() {
        return this.created_at;
    }

    /**
     * @param {Date} createdAt
     */
    setCreatedAt(createdAt) {
        this['created_at'] = createdAt;
    }
/**
     * @return {Date}
     */
    getDeletedAt() {
        return this.deleted_at;
    }

    /**
     * @param {Date} deletedAt
     */
    setDeletedAt(deletedAt) {
        this['deleted_at'] = deletedAt;
    }
/**
     * @return {Number}
     */
    getExternalStationId() {
        return this._external_station_id;
    }

    /**
     * @param {Number} externalStationId
     */
    setExternalStationId(externalStationId) {
        this['_external_station_id'] = externalStationId;
    }
/**
     * @return {Number}
     */
    getProgramId() {
        return this.program_id;
    }

    /**
     * @param {Number} programId
     */
    setProgramId(programId) {
        this['program_id'] = programId;
    }
/**
     * @return {Number}
     */
    getModelTypeId() {
        return this.model_type_id;
    }

    /**
     * @param {Number} modelTypeId
     */
    setModelTypeId(modelTypeId) {
        this['model_type_id'] = modelTypeId;
    }
/**
     * @return {Number}
     */
    getStationId() {
        return this.station_id;
    }

    /**
     * @param {Number} stationId
     */
    setStationId(stationId) {
        this['station_id'] = stationId;
    }
/**
     * @return {Object}
     */
    getFieldValues() {
        return this.field_values;
    }

    /**
     * @param {Object} fieldValues
     */
    setFieldValues(fieldValues) {
        this['field_values'] = fieldValues;
    }
/**
     * @return {String}
     */
    getTitle() {
        return this.title;
    }

    /**
     * @param {String} title
     */
    setTitle(title) {
        this['title'] = title;
    }
/**
     * @return {Date}
     */
    getStart() {
        return this.start;
    }

    /**
     * @param {Date} start
     */
    setStart(start) {
        this['start'] = start;
    }
/**
     * @return {Date}
     */
    getStop() {
        return this.stop;
    }

    /**
     * @param {Date} stop
     */
    setStop(stop) {
        this['stop'] = stop;
    }
/**
     * @return {Number}
     */
    getGenreId() {
        return this.genre_id;
    }

    /**
     * @param {Number} genreId
     */
    setGenreId(genreId) {
        this['genre_id'] = genreId;
    }
/**
     * @return {String}
     */
    getDescription() {
        return this.description;
    }

    /**
     * @param {String} description
     */
    setDescription(description) {
        this['description'] = description;
    }
/**
     * @return {String}
     */
    getShortName() {
        return this.short_name;
    }

    /**
     * @param {String} shortName
     */
    setShortName(shortName) {
        this['short_name'] = shortName;
    }
/**
     * @return {String}
     */
    getMediumName() {
        return this.medium_name;
    }

    /**
     * @param {String} mediumName
     */
    setMediumName(mediumName) {
        this['medium_name'] = mediumName;
    }
/**
     * @return {String}
     */
    getWebsite() {
        return this.website;
    }

    /**
     * @param {String} website
     */
    setWebsite(website) {
        this['website'] = website;
    }
/**
     * @return {String}
     */
    getEmail() {
        return this.email;
    }

    /**
     * @param {String} email
     */
    setEmail(email) {
        this['email'] = email;
    }
/**
     * @return {Boolean}
     */
    getRecommended() {
        return this.recommended;
    }

    /**
     * @param {Boolean} recommended
     */
    setRecommended(recommended) {
        this['recommended'] = recommended;
    }
/**
     * @return {String}
     */
    getLanguage() {
        return this.language;
    }

    /**
     * @param {String} language
     */
    setLanguage(language) {
        this['language'] = language;
    }
/**
     * @return {Boolean}
     */
    getPublished() {
        return this.published;
    }

    /**
     * @param {Boolean} published
     */
    setPublished(published) {
        this['published'] = published;
    }
/**
     * @return {String}
     */
    getRepetitionUid() {
        return this.repetition_uid;
    }

    /**
     * @param {String} repetitionUid
     */
    setRepetitionUid(repetitionUid) {
        this['repetition_uid'] = repetitionUid;
    }
/**
     * @return {module:models/BroadcastEPGResult.RepetitionTypeEnum}
     */
    getRepetitionType() {
        return this.repetition_type;
    }

    /**
     * @param {module:models/BroadcastEPGResult.RepetitionTypeEnum} repetitionType
     */
    setRepetitionType(repetitionType) {
        this['repetition_type'] = repetitionType;
    }
/**
     * @return {Date}
     */
    getRepetitionEnd() {
        return this.repetition_end;
    }

    /**
     * @param {Date} repetitionEnd
     */
    setRepetitionEnd(repetitionEnd) {
        this['repetition_end'] = repetitionEnd;
    }
/**
     * @return {Date}
     */
    getRepetitionStart() {
        return this.repetition_start;
    }

    /**
     * @param {Date} repetitionStart
     */
    setRepetitionStart(repetitionStart) {
        this['repetition_start'] = repetitionStart;
    }
/**
     * @return {String}
     */
    getRepetitionDays() {
        return this.repetition_days;
    }

    /**
     * @param {String} repetitionDays
     */
    setRepetitionDays(repetitionDays) {
        this['repetition_days'] = repetitionDays;
    }
/**
     * @return {Number}
     */
    getPtyCodeId() {
        return this.pty_code_id;
    }

    /**
     * @param {Number} ptyCodeId
     */
    setPtyCodeId(ptyCodeId) {
        this['pty_code_id'] = ptyCodeId;
    }
/**
     * @return {Number}
     */
    getPlannedInEpg() {
        return this.planned_in_epg;
    }

    /**
     * @param {Number} plannedInEpg
     */
    setPlannedInEpg(plannedInEpg) {
        this['planned_in_epg'] = plannedInEpg;
    }
/**
     * @return {Number}
     */
    getGroupId() {
        return this.group_id;
    }

    /**
     * @param {Number} groupId
     */
    setGroupId(groupId) {
        this['group_id'] = groupId;
    }
/**
     * @return {module:models/BroadcastRelationsItems}
     */
    getItems() {
        return this.items;
    }

    /**
     * @param {module:models/BroadcastRelationsItems} items
     */
    setItems(items) {
        this['items'] = items;
    }
/**
     * @return {module:models/BroadcastRelationsBlocks}
     */
    getBlocks() {
        return this.blocks;
    }

    /**
     * @param {module:models/BroadcastRelationsBlocks} blocks
     */
    setBlocks(blocks) {
        this['blocks'] = blocks;
    }
/**
     * @return {module:models/BlockRelationsProgram}
     */
    getProgram() {
        return this.program;
    }

    /**
     * @param {module:models/BlockRelationsProgram} program
     */
    setProgram(program) {
        this['program'] = program;
    }
/**
     * @return {module:models/BroadcastRelationsTags}
     */
    getTags() {
        return this.tags;
    }

    /**
     * @param {module:models/BroadcastRelationsTags} tags
     */
    setTags(tags) {
        this['tags'] = tags;
    }
/**
     * @return {Array.<module:models/PresenterEPGResult>}
     */
    getPresenters() {
        return this.presenters;
    }

    /**
     * @param {Array.<module:models/PresenterEPGResult>} presenters
     */
    setPresenters(presenters) {
        this['presenters'] = presenters;
    }
/**
     * @return {module:models/BroadcastRelationsModelType}
     */
    getModelType() {
        return this.model_type;
    }

    /**
     * @param {module:models/BroadcastRelationsModelType} modelType
     */
    setModelType(modelType) {
        this['model_type'] = modelType;
    }

}

BroadcastEPGResult.RequiredProperties = ["id"];

/**
 * @member {Number} id
 */
BroadcastEPGResult.prototype['id'] = undefined;

/**
 * @member {Date} updated_at
 */
BroadcastEPGResult.prototype['updated_at'] = undefined;

/**
 * @member {Date} created_at
 */
BroadcastEPGResult.prototype['created_at'] = undefined;

/**
 * @member {Date} deleted_at
 */
BroadcastEPGResult.prototype['deleted_at'] = undefined;

/**
 * @member {Number} _external_station_id
 */
BroadcastEPGResult.prototype['_external_station_id'] = undefined;

/**
 * @member {Number} program_id
 */
BroadcastEPGResult.prototype['program_id'] = undefined;

/**
 * @member {Number} model_type_id
 */
BroadcastEPGResult.prototype['model_type_id'] = undefined;

/**
 * @member {Number} station_id
 */
BroadcastEPGResult.prototype['station_id'] = undefined;

/**
 * @member {Object} field_values
 */
BroadcastEPGResult.prototype['field_values'] = undefined;

/**
 * @member {String} title
 */
BroadcastEPGResult.prototype['title'] = undefined;

/**
 * @member {Date} start
 */
BroadcastEPGResult.prototype['start'] = undefined;

/**
 * @member {Date} stop
 */
BroadcastEPGResult.prototype['stop'] = undefined;

/**
 * @member {Number} genre_id
 */
BroadcastEPGResult.prototype['genre_id'] = undefined;

/**
 * @member {String} description
 */
BroadcastEPGResult.prototype['description'] = undefined;

/**
 * @member {String} short_name
 */
BroadcastEPGResult.prototype['short_name'] = undefined;

/**
 * @member {String} medium_name
 */
BroadcastEPGResult.prototype['medium_name'] = undefined;

/**
 * @member {String} website
 */
BroadcastEPGResult.prototype['website'] = undefined;

/**
 * @member {String} email
 */
BroadcastEPGResult.prototype['email'] = undefined;

/**
 * @member {Boolean} recommended
 */
BroadcastEPGResult.prototype['recommended'] = undefined;

/**
 * @member {String} language
 */
BroadcastEPGResult.prototype['language'] = undefined;

/**
 * @member {Boolean} published
 */
BroadcastEPGResult.prototype['published'] = undefined;

/**
 * @member {String} repetition_uid
 */
BroadcastEPGResult.prototype['repetition_uid'] = undefined;

/**
 * @member {module:models/BroadcastEPGResult.RepetitionTypeEnum} repetition_type
 */
BroadcastEPGResult.prototype['repetition_type'] = undefined;

/**
 * @member {Date} repetition_end
 */
BroadcastEPGResult.prototype['repetition_end'] = undefined;

/**
 * @member {Date} repetition_start
 */
BroadcastEPGResult.prototype['repetition_start'] = undefined;

/**
 * @member {String} repetition_days
 */
BroadcastEPGResult.prototype['repetition_days'] = undefined;

/**
 * @member {Number} pty_code_id
 */
BroadcastEPGResult.prototype['pty_code_id'] = undefined;

/**
 * @member {Number} planned_in_epg
 */
BroadcastEPGResult.prototype['planned_in_epg'] = undefined;

/**
 * @member {Number} group_id
 */
BroadcastEPGResult.prototype['group_id'] = undefined;

/**
 * @member {module:models/BroadcastRelationsItems} items
 */
BroadcastEPGResult.prototype['items'] = undefined;

/**
 * @member {module:models/BroadcastRelationsBlocks} blocks
 */
BroadcastEPGResult.prototype['blocks'] = undefined;

/**
 * @member {module:models/BlockRelationsProgram} program
 */
BroadcastEPGResult.prototype['program'] = undefined;

/**
 * @member {module:models/BroadcastRelationsTags} tags
 */
BroadcastEPGResult.prototype['tags'] = undefined;

/**
 * @member {Array.<module:models/PresenterEPGResult>} presenters
 */
BroadcastEPGResult.prototype['presenters'] = undefined;

/**
 * @member {module:models/BroadcastRelationsModelType} model_type
 */
BroadcastEPGResult.prototype['model_type'] = undefined;


// Implement BroadcastOutputOnly interface:
/**
 * @member {Number} id
 */
BroadcastOutputOnly.prototype['id'] = undefined;
/**
 * @member {Date} updated_at
 */
BroadcastOutputOnly.prototype['updated_at'] = undefined;
/**
 * @member {Date} created_at
 */
BroadcastOutputOnly.prototype['created_at'] = undefined;
/**
 * @member {Date} deleted_at
 */
BroadcastOutputOnly.prototype['deleted_at'] = undefined;
/**
 * @member {Number} _external_station_id
 */
BroadcastOutputOnly.prototype['_external_station_id'] = undefined;
// Implement Broadcast interface:
/**
 * @member {Number} program_id
 */
Broadcast.prototype['program_id'] = undefined;
/**
 * @member {Number} model_type_id
 */
Broadcast.prototype['model_type_id'] = undefined;
/**
 * @member {Number} station_id
 */
Broadcast.prototype['station_id'] = undefined;
/**
 * @member {Object} field_values
 */
Broadcast.prototype['field_values'] = undefined;
/**
 * @member {String} title
 */
Broadcast.prototype['title'] = undefined;
/**
 * @member {Date} start
 */
Broadcast.prototype['start'] = undefined;
/**
 * @member {Date} stop
 */
Broadcast.prototype['stop'] = undefined;
/**
 * @member {Number} genre_id
 */
Broadcast.prototype['genre_id'] = undefined;
/**
 * @member {String} description
 */
Broadcast.prototype['description'] = undefined;
/**
 * @member {String} short_name
 */
Broadcast.prototype['short_name'] = undefined;
/**
 * @member {String} medium_name
 */
Broadcast.prototype['medium_name'] = undefined;
/**
 * @member {String} website
 */
Broadcast.prototype['website'] = undefined;
/**
 * @member {String} email
 */
Broadcast.prototype['email'] = undefined;
/**
 * @member {Boolean} recommended
 */
Broadcast.prototype['recommended'] = undefined;
/**
 * @member {String} language
 */
Broadcast.prototype['language'] = undefined;
/**
 * @member {Boolean} published
 */
Broadcast.prototype['published'] = undefined;
/**
 * @member {String} repetition_uid
 */
Broadcast.prototype['repetition_uid'] = undefined;
/**
 * @member {module:models/Broadcast.RepetitionTypeEnum} repetition_type
 */
Broadcast.prototype['repetition_type'] = undefined;
/**
 * @member {Date} repetition_end
 */
Broadcast.prototype['repetition_end'] = undefined;
/**
 * @member {Date} repetition_start
 */
Broadcast.prototype['repetition_start'] = undefined;
/**
 * @member {String} repetition_days
 */
Broadcast.prototype['repetition_days'] = undefined;
/**
 * @member {Number} pty_code_id
 */
Broadcast.prototype['pty_code_id'] = undefined;
/**
 * @member {Number} planned_in_epg
 */
Broadcast.prototype['planned_in_epg'] = undefined;
/**
 * @member {Number} group_id
 */
Broadcast.prototype['group_id'] = undefined;
// Implement BroadcastEPGRelations interface:
/**
 * @member {module:models/BroadcastRelationsItems} items
 */
BroadcastEPGRelations.prototype['items'] = undefined;
/**
 * @member {module:models/BroadcastRelationsBlocks} blocks
 */
BroadcastEPGRelations.prototype['blocks'] = undefined;
/**
 * @member {module:models/BlockRelationsProgram} program
 */
BroadcastEPGRelations.prototype['program'] = undefined;
/**
 * @member {module:models/BroadcastRelationsTags} tags
 */
BroadcastEPGRelations.prototype['tags'] = undefined;
/**
 * @member {Array.<module:models/PresenterEPGResult>} presenters
 */
BroadcastEPGRelations.prototype['presenters'] = undefined;
/**
 * @member {module:models/BroadcastRelationsModelType} model_type
 */
BroadcastEPGRelations.prototype['model_type'] = undefined;



/**
 * Allowed values for the <code>repetition_type</code> property.
 * @enum {String}
 * @readonly
 */
BroadcastEPGResult['RepetitionTypeEnum'] = {

    /**
     * value: "1 week"
     * @const
     */
    "1 week": "1 week",

    /**
     * value: "2 week"
     * @const
     */
    "2 week": "2 week",

    /**
     * value: "4 week"
     * @const
     */
    "4 week": "4 week",

    /**
     * value: "1 month"
     * @const
     */
    "1 month": "1 month"
};



export default BroadcastEPGResult;

